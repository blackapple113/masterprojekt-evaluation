{
	"results": [
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-ec2-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 117,
				"end_line": 134
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 97,
				"end_line": 103
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 90,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 83,
				"end_line": 89
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group_rule.egress",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 145,
				"end_line": 152
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group_rule.ingress",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 136,
				"end_line": 143
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.web_host",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 1,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.db_app",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 243,
				"end_line": 413
			}
		},
		{
			"rule_id": "AVD-AWS-0026",
			"long_id": "aws-ec2-enable-volume-encryption",
			"rule_description": "EBS volumes must be encrypted",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of EBS volumes",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-volume-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
			],
			"description": "EBS volume is not encrypted.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_ebs_volume.web_host_storage",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 34,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.web_host",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 1,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.db_app",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 243,
				"end_line": 413
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 101,
				"end_line": 102
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group_rule.egress",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 150,
				"end_line": 150
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 94,
				"end_line": 95
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web-node",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 87,
				"end_line": 88
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_subnet.eks_subnet2",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 94,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_subnet.eks_subnet1",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 66,
				"end_line": 66
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_subnet.web_subnet2",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 159,
				"end_line": 159
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_subnet.web_subnet",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 139,
				"end_line": 139
			}
		},
		{
			"rule_id": "AVD-AWS-0029",
			"long_id": "aws-ec2-no-secrets-in-user-data",
			"rule_description": "User data for EC2 instances must not contain sensitive AWS keys",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "User data is visible through the AWS Management console",
			"resolution": "Remove sensitive data from the EC2 instance user-data",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-secrets-in-user-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data"
			],
			"description": "Sensitive data found in instance user data: Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.web_host",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 9,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_vpc.eks_vpc",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 44,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-AWS-0027",
			"long_id": "aws-ec2-volume-encryption-customer-key",
			"rule_description": "EBS volume encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/volume-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
			],
			"description": "EBS volume does not use a customer-managed KMS key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_ebs_volume.web_host_storage",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 34,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_ecr_repository.repository",
			"location": {
				"filename": "/terraform/terraform/aws/ecr.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_ecr_repository.repository",
			"location": {
				"filename": "/terraform/terraform/aws/ecr.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_ecr_repository.repository",
			"location": {
				"filename": "/terraform/terraform/aws/ecr.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane authenticator logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane controller manager logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane API logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane audit logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane scheduler logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0039",
			"long_id": "aws-eks-encrypt-secrets",
			"rule_description": "EKS should have the encryption of secrets enabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS secrets could be read if compromised",
			"resolution": "Enable encryption of EKS secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/encrypt-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config"
			],
			"description": "Cluster does not have secret encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 118,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0040",
			"long_id": "aws-eks-no-public-cluster-access",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/no-public-cluster-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access"
			],
			"description": "Public cluster access is enabled.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 122,
				"end_line": 125
			}
		},
		{
			"rule_id": "AVD-AWS-0041",
			"long_id": "aws-eks-no-public-cluster-access-to-cidr",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be accessed from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/eks/no-public-cluster-access-to-cidr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config"
			],
			"description": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_eks_cluster.eks_cluster",
			"location": {
				"filename": "/terraform/terraform/aws/eks.tf",
				"start_line": 122,
				"end_line": 125
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_elasticsearch_domain.monitoring-framework",
			"location": {
				"filename": "/terraform/terraform/aws/es.tf",
				"start_line": 1,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_elasticsearch_domain.monitoring-framework",
			"location": {
				"filename": "/terraform/terraform/aws/es.tf",
				"start_line": 1,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_elasticsearch_domain.monitoring-framework",
			"location": {
				"filename": "/terraform/terraform/aws/es.tf",
				"start_line": 1,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_elasticsearch_domain.monitoring-framework",
			"location": {
				"filename": "/terraform/terraform/aws/es.tf",
				"start_line": 1,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_elasticsearch_domain.monitoring-framework",
			"location": {
				"filename": "/terraform/terraform/aws/es.tf",
				"start_line": 1,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_elb.weblb",
			"location": {
				"filename": "/terraform/terraform/aws/elb.tf",
				"start_line": 2,
				"end_line": 40
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user_policy.userpolicy",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 41,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user_policy.userpolicy",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 34,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user_policy.userpolicy",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 34,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user_policy.userpolicy",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 34,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user_policy.userpolicy",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 34,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:*' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_role_policy.ec2policy",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 221,
				"end_line": 221
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 's3:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_role_policy.ec2policy",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 215,
				"end_line": 219
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 's3:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_role_policy.ec2policy",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 215,
				"end_line": 219
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 's3:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_role_policy.ec2policy",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 215,
				"end_line": 219
			}
		},
		{
			"rule_id": "AVD-AWS-0143",
			"long_id": "aws-iam-no-user-attached-policies",
			"rule_description": "IAM policies should not be granted directly to users.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Complex access control is difficult to manage and maintain.",
			"resolution": "Grant policies at the group level instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/iam/no-user-attached-policies/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user"
			],
			"description": "One or more policies are attached directly to a user",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_user.user",
			"location": {
				"filename": "/terraform/terraform/aws/iam.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_kms_key.logs_key",
			"location": {
				"filename": "/terraform/terraform/aws/kms.tf",
				"start_line": 1,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_lambda_function.analysis_lambda",
			"location": {
				"filename": "/terraform/terraform/aws/lambda.tf",
				"start_line": 32,
				"end_line": 59
			}
		},
		{
			"rule_id": "AVD-AWS-0075",
			"long_id": "aws-neptune-enable-log-export",
			"rule_description": "Neptune logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Limited visibility of audit trail for changes to Neptune",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports"
			],
			"description": "Cluster does not have audit logging enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "/terraform/terraform/aws/neptune.tf",
				"start_line": 1,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0076",
			"long_id": "aws-neptune-enable-storage-encryption",
			"rule_description": "Neptune storage must be encrypted at rest",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of Neptune storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "/terraform/terraform/aws/neptune.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0128",
			"long_id": "aws-neptune-encryption-customer-key",
			"rule_description": "Neptune encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/neptune/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "/terraform/terraform/aws/neptune.tf",
				"start_line": 1,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 1,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AWS-0176",
			"long_id": "aws-rds-enable-iam-auth",
			"rule_description": "RDS IAM Database Authentication Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-iam-auth/"
			],
			"description": "Instance does not have IAM Authentication enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 1,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 1,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app7-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 97,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app6-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 81,
				"end_line": 95
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app5-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 65,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app4-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 49,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app3-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 33,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app2-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 17,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app9-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 130,
				"end_line": 144
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app8-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 113,
				"end_line": 128
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app1-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app1-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_rds_cluster.app2-rds-cluster",
			"location": {
				"filename": "/terraform/terraform/aws/rds.tf",
				"start_line": 20,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "/terraform/terraform/aws/db-app.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.logs",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 113,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.logs",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 113,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.logs",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 113,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.logs",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 113,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data_science",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 89,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.operations",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 65,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.financials",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 42,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.logs",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 113,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.data",
			"location": {
				"filename": "/terraform/terraform/aws/s3.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.flowbucket",
			"location": {
				"filename": "/terraform/terraform/aws/ec2.tf",
				"start_line": 271,
				"end_line": 288
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service2",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 43,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service1",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 22,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service2",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service1",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 22,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service2",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 43,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service1",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 28,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service2",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 43,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service1",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 22,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AZU-0006",
			"long_id": "azure-appservice-use-secure-tls-policy",
			"rule_description": "Web App uses latest TLS version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "The minimum TLS version for apps should be TLS1_2",
			"resolution": "The TLS version being outdated and has known vulnerabilities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/appservice/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version"
			],
			"description": "App service does not require a secure TLS version.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_app_service.app-service1",
			"location": {
				"filename": "/terraform/terraform/azure/app_service.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0039",
			"long_id": "azure-compute-disable-password-authentication",
			"rule_description": "Password authentication should be disabled on Azure virtual machines",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Using password authentication is less secure that ssh keys may result in compromised servers",
			"resolution": "Use ssh authentication for virtual machines",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/compute/disable-password-authentication/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication"
			],
			"description": "Linux virtual machine allows password authentication.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_linux_virtual_machine.linux_machine",
			"location": {
				"filename": "/terraform/terraform/azure/instance.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0038",
			"long_id": "azure-compute-enable-disk-encryption",
			"rule_description": "Enable disk encryption on managed disk",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Data could be read if compromised",
			"resolution": "Enable encryption on managed disks",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/compute/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk"
			],
			"description": "Managed disk is not encrypted.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_managed_disk.example",
			"location": {
				"filename": "/terraform/terraform/azure/storage.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.k8s_cluster",
			"location": {
				"filename": "/terraform/terraform/azure/aks.tf",
				"start_line": 1,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.k8s_cluster",
			"location": {
				"filename": "/terraform/terraform/azure/aks.tf",
				"start_line": 1,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.k8s_cluster",
			"location": {
				"filename": "/terraform/terraform/azure/aks.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.k8s_cluster",
			"location": {
				"filename": "/terraform/terraform/azure/aks.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 37,
				"end_line": 40
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 242,
				"end_line": 245
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 228,
				"end_line": 231
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 215,
				"end_line": 218
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 201,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 187,
				"end_line": 190
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 173,
				"end_line": 176
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 159,
				"end_line": 162
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_sql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 9,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 96,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql4",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 77,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql3",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 58,
				"end_line": 75
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql2",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 39,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql1",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 20,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql7",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 134,
				"end_line": 151
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql6",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 115,
				"end_line": 132
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 85,
				"end_line": 85
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mysql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 60,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_sql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 9,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 73,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mysql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 59,
				"end_line": 59
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 96,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql4",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 77,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql3",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 58,
				"end_line": 75
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql2",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 39,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql1",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 20,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql7",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 134,
				"end_line": 151
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql6",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 115,
				"end_line": 132
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_configuration.thrtottling_config",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 102,
				"end_line": 102
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_configuration.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 109,
				"end_line": 109
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 73,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_sql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 9,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 73,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mysql_server.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 44,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 96,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql4",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 77,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql3",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 58,
				"end_line": 75
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql2",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 39,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql1",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 20,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql7",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 134,
				"end_line": 151
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server.mssql6",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 115,
				"end_line": 132
			}
		},
		{
			"rule_id": "AVD-AZU-0018",
			"long_id": "azure-database-threat-alert-email-set",
			"rule_description": "At least one email address is set for threat alerts",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Nobody will be prompty alerted in the case of a threat being detected",
			"resolution": "Provide at least one email address for threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses"
			],
			"description": "Security alert policy does not include any email addresses for notification.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 31,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AZU-0018",
			"long_id": "azure-database-threat-alert-email-set",
			"rule_description": "At least one email address is set for threat alerts",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Nobody will be prompty alerted in the case of a threat being detected",
			"resolution": "Provide at least one email address for threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses"
			],
			"description": "Security alert policy does not include any email addresses for notification.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 209,
				"end_line": 220
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.example",
			"location": {
				"filename": "/terraform/terraform/azure/sql.tf",
				"start_line": 31,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 236,
				"end_line": 248
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 222,
				"end_line": 234
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 209,
				"end_line": 220
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 195,
				"end_line": 207
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 181,
				"end_line": 193
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 167,
				"end_line": 179
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 153,
				"end_line": 165
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_key_vault_secret.secret",
			"location": {
				"filename": "/terraform/terraform/azure/key_vault.tf",
				"start_line": 58,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "/terraform/terraform/azure/key_vault.tf",
				"start_line": 33,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_key_vault_secret.secret",
			"location": {
				"filename": "/terraform/terraform/azure/key_vault.tf",
				"start_line": 58,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "/terraform/terraform/azure/key_vault.tf",
				"start_line": 1,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "/terraform/terraform/azure/key_vault.tf",
				"start_line": 1,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0031",
			"long_id": "azure-monitor-activity-log-retention-set",
			"rule_description": "Ensure the activity retention log is set to at least a year",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Short life activity logs can lead to missing records when investigating a breach",
			"resolution": "Set a retention period that will allow for delayed investigation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/activity-log-retention-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy"
			],
			"description": "Profile has a log retention policy of less than 1 year.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_monitor_log_profile.logging_profile",
			"location": {
				"filename": "/terraform/terraform/azure/logging.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Delete' category.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_monitor_log_profile.logging_profile",
			"location": {
				"filename": "/terraform/terraform/azure/logging.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Write' category.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_monitor_log_profile.logging_profile",
			"location": {
				"filename": "/terraform/terraform/azure/logging.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0032",
			"long_id": "azure-monitor-capture-all-regions",
			"rule_description": "Ensure activitys are captured for all locations",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Activity may be occurring in locations that aren't being monitored",
			"resolution": "Enable capture for all locations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/monitor/capture-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations"
			],
			"description": "Log profile does not log to all regions (68 regions missing).",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_monitor_log_profile.logging_profile",
			"location": {
				"filename": "/terraform/terraform/azure/logging.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0048",
			"long_id": "azure-network-disable-rdp-from-internet",
			"rule_description": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Anyone from the internet can potentially RDP onto an instance",
			"resolution": "Block RDP port from internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/disable-rdp-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to RDP port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_network_security_group.bad_sg",
			"location": {
				"filename": "/terraform/terraform/azure/networking.tf",
				"start_line": 92,
				"end_line": 92
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_network_security_group.bad_sg",
			"location": {
				"filename": "/terraform/terraform/azure/networking.tf",
				"start_line": 92,
				"end_line": 92
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_network_security_group.bad_sg",
			"location": {
				"filename": "/terraform/terraform/azure/networking.tf",
				"start_line": 80,
				"end_line": 80
			}
		},
		{
			"rule_id": "AVD-AZU-0049",
			"long_id": "azure-network-retention-policy-set",
			"rule_description": "Retention policy for flow logs should be enabled and set to greater than 90 days",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Not enabling retention or having short expiry on flow logs could lead to compromise being undetected limiting time for analysis",
			"resolution": "Ensure flow log retention is turned on with an expiry of \u003e90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/retention-policy-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log#retention_policy"
			],
			"description": "Flow log does not enable the log retention policy.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_network_watcher_flow_log.flow_log",
			"location": {
				"filename": "/terraform/terraform/azure/networking.tf",
				"start_line": 132,
				"end_line": 132
			}
		},
		{
			"rule_id": "AVD-AZU-0050",
			"long_id": "azure-network-ssh-blocked-from-internet",
			"rule_description": "SSH access should not be accessible from the Internet, should be blocked on port 22",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Its dangerous to allow SSH access from the internet",
			"resolution": "Block port 22 access from the internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/network/ssh-blocked-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to SSH port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_network_security_group.bad_sg",
			"location": {
				"filename": "/terraform/terraform/azure/networking.tf",
				"start_line": 80,
				"end_line": 80
			}
		},
		{
			"rule_id": "AVD-AZU-0044",
			"long_id": "azure-security-center-alert-on-severe-notifications",
			"rule_description": "Send notification emails for high severity alerts",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "The ability to react to high severity notifications could be delayed",
			"resolution": " Set alert notifications to be on",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/alert-on-severe-notifications/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#alert_notifications"
			],
			"description": "Security contact has alert notifications disabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "azurerm_security_center_contact.contact",
			"location": {
				"filename": "/terraform/terraform/azure/security_center.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.pricing",
			"location": {
				"filename": "/terraform/terraform/azure/security_center.tf",
				"start_line": 2,
				"end_line": 2
			}
		},
		{
			"rule_id": "AVD-AZU-0046",
			"long_id": "azure-security-center-set-required-contact-details",
			"rule_description": "The required contact details should be set for security center",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Without a telephone number set, Azure support can't contact",
			"resolution": "Set a telephone number for security center contact",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/security-center/set-required-contact-details/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#phone"
			],
			"description": "Security contact does not have a phone number listed.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "azurerm_security_center_contact.contact",
			"location": {
				"filename": "/terraform/terraform/azure/security_center.tf",
				"start_line": 5,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "/terraform/terraform/azure/storage.tf",
				"start_line": 62,
				"end_line": 69
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "/terraform/terraform/azure/storage.tf",
				"start_line": 23,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "azurerm_storage_account.security_storage_account",
			"location": {
				"filename": "/terraform/terraform/azure/mssql.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-GCP-0046",
			"long_id": "google-bigquery-no-public-access",
			"rule_description": "BigQuery datasets should only be accessible within the organisation",
			"rule_provider": "google",
			"rule_service": "bigquery",
			"impact": "Exposure of sensitive data to the public iniernet",
			"resolution": "Configure access permissions with higher granularity",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/bigquery/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/bigquery_dataset#special_group"
			],
			"description": "Dataset grants access to all authenticated GCP users.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "google_bigquery_dataset.dataset",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 24,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-GCP-0034",
			"long_id": "google-compute-disk-encryption-customer-key",
			"rule_description": "Disks should be encrypted with customer managed encryption keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper key management.",
			"resolution": "Use managed keys to encrypt disks.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/disk-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link"
			],
			"description": "Disk is not encrypted with a customer managed key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_compute_disk.unencrypted_disk",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 36,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-GCP-0045",
			"long_id": "google-compute-enable-shielded-vm-im",
			"rule_description": "Instances should have Shielded VM integrity monitoring enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "No visibility of VM instance boot state.",
			"resolution": "Enable Shielded VM Integrity Monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-shielded-vm-im/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm"
			],
			"description": "Instance does not have shielded VM integrity monitoring enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 3,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-GCP-0041",
			"long_id": "google-compute-enable-shielded-vm-vtpm",
			"rule_description": "Instances should have Shielded VM VTPM enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Unable to prevent unwanted system state modification",
			"resolution": "Enable Shielded VM VTPM",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-shielded-vm-vtpm/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm"
			],
			"description": "Instance does not have VTPM for shielded VMs enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 3,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-GCP-0029",
			"long_id": "google-compute-enable-vpc-flow-logs",
			"rule_description": "VPC flow logs should be enabled for all subnetworks",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Limited auditing capability and awareness",
			"resolution": "Enable VPC flow logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/enable-vpc-flow-logs/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#enable_flow_logs"
			],
			"description": "Subnetwork does not have VPC flow logs enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_compute_subnetwork.public-subnetwork",
			"location": {
				"filename": "/terraform/terraform/gcp/networks.tf",
				"start_line": 7,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-GCP-0043",
			"long_id": "google-compute-no-ip-forwarding",
			"rule_description": "Instances should not have IP forwarding enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Instance can send/receive packets without the explicit instance address",
			"resolution": "Disable IP forwarding",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-ip-forwarding/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#can_ip_forward"
			],
			"description": "Instance has IP forwarding allowed.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-GCP-0036",
			"long_id": "google-compute-no-oslogin-override",
			"rule_description": "Instances should not override the project setting for OS Login",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Access via SSH key cannot be revoked automatically when an IAM user is removed.",
			"resolution": "Enable OS Login at project level and remove instance-level overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-oslogin-override/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance has OS Login disabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 19,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-GCP-0030",
			"long_id": "google-compute-no-project-wide-ssh-keys",
			"rule_description": "Disable project-wide SSH keys for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Compromise of a single key pair compromises all instances",
			"resolution": "Disable project-wide SSH keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-project-wide-ssh-keys/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance allows use of project-level SSH keys.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 19,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-GCP-0027",
			"long_id": "google-compute-no-public-ingress",
			"rule_description": "An inbound firewall rule allows traffic from /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges",
				"https://www.terraform.io/docs/providers/google/r/compute_firewall.html"
			],
			"description": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "google_compute_firewall.allow_all",
			"location": {
				"filename": "/terraform/terraform/gcp/networks.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0031",
			"long_id": "google-compute-no-public-ip",
			"rule_description": "Instances should not have public IP addresses",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Direct exposure of an instance to the public internet",
			"resolution": "Remove public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#access_config"
			],
			"description": "Instance has a public IP allocated.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GCP-0032",
			"long_id": "google-compute-no-serial-port",
			"rule_description": "Disable serial port connectivity for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Unrestricted network access to the serial console of the instance",
			"resolution": "Disable serial port access",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/no-serial-port/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance has serial port enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 19,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-GCP-0033",
			"long_id": "google-compute-vm-disk-encryption-customer-key",
			"rule_description": "VM disks should be encrypted with Customer Supplied Encryption Keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper management",
			"resolution": "Use managed keys ",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/compute/vm-disk-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#kms_key_self_link"
			],
			"description": "Instance disk encryption does not use a customer managed key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_compute_instance.server",
			"location": {
				"filename": "/terraform/terraform/gcp/instances.tf",
				"start_line": 7,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0063",
			"long_id": "google-gke-enable-auto-repair",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-auto-repair/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Node pool does not have auto-repair enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 24,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-GCP-0058",
			"long_id": "google-gke-enable-auto-upgrade",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-auto-upgrade/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Node pool does not have auto-upgraade enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 24,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-GCP-0049",
			"long_id": "google-gke-enable-ip-aliasing",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-ip-aliasing/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Cluster has IP aliasing disabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 6,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0056",
			"long_id": "google-gke-enable-network-policy",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Cluster does not have a network policy enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 6,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0059",
			"long_id": "google-gke-enable-private-cluster",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-private-cluster/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Cluster does not have private nodes.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 6,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0060",
			"long_id": "google-gke-enable-stackdriver-logging",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-stackdriver-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GCP-0052",
			"long_id": "google-gke-enable-stackdriver-monitoring",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enable-stackdriver-monitoring/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-GCP-0047",
			"long_id": "google-gke-enforce-pod-security-policy",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/enforce-pod-security-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config"
			],
			"description": "Cluster pod security policy is not enforced.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 6,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0048",
			"long_id": "google-gke-metadata-endpoints-disabled",
			"rule_description": "Legacy metadata endpoints enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Legacy metadata endpoints don't require metadata headers",
			"resolution": "Disable legacy metadata endpoints",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/metadata-endpoints-disabled/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata"
			],
			"description": "Cluster has legacy metadata endpoints enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 28,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0053",
			"long_id": "google-gke-no-public-control-plane",
			"rule_description": "GKE Control Plane should not be publicly accessible",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "GKE control plane exposed to public internet",
			"resolution": "Use private nodes and master authorised networks to prevent exposure",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/no-public-control-plane/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Cluster exposes control plane to the public internet.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0057",
			"long_id": "google-gke-node-metadata-security",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-metadata-security/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata"
			],
			"description": "Cluster exposes node metadata of pools by default.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 28,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0057",
			"long_id": "google-gke-node-metadata-security",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-metadata-security/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata"
			],
			"description": "Node pool exposes node metadata.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 28,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0054",
			"long_id": "google-gke-node-pool-uses-cos",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-pool-uses-cos/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#image_type"
			],
			"description": "Cluster is not configuring node pools to use the COS containerd image type by default.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-GCP-0054",
			"long_id": "google-gke-node-pool-uses-cos",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/node-pool-uses-cos/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#image_type"
			],
			"description": "Node pool is not using the COS containerd image type.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-GCP-0051",
			"long_id": "google-gke-use-cluster-labels",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-cluster-labels/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Cluster does not use GCE resource labels.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 6,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0062",
			"long_id": "google-gke-use-rbac-permissions",
			"rule_description": "Legacy ABAC permissions are enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "ABAC permissions are less secure than RBAC permissions",
			"resolution": "Switch to using RBAC permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-rbac-permissions/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac"
			],
			"description": "Cluster has legacy ABAC enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_container_cluster.workload_cluster",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0050",
			"long_id": "google-gke-use-service-account",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/gke/use-service-account/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account"
			],
			"description": "Node pool does not override the default service account.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_container_node_pool.custom_node_pool",
			"location": {
				"filename": "/terraform/terraform/gcp/gke.tf",
				"start_line": 28,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0024",
			"long_id": "google-sql-enable-backup",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/enable-backup/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true"
			],
			"description": "Database instance does not have backups enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GCP-0014",
			"long_id": "google-sql-enable-pg-temp-file-logging",
			"rule_description": "Temporary file logging should be enabled for all temporary files.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Use of temporary files will not be logged",
			"resolution": "Enable temporary file logging for all files",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/enable-pg-temp-file-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance has temporary file logging disabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0015",
			"long_id": "google-sql-encrypt-in-transit-data",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/encrypt-in-transit-data/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance does not require TLS for all connections.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 8,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is granted a public internet address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0025",
			"long_id": "google-sql-pg-log-checkpoints",
			"rule_description": "Ensure that logging of checkpoints is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable checkpoints logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0016",
			"long_id": "google-sql-pg-log-connections",
			"rule_description": "Ensure that logging of connections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable connection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log connections.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0022",
			"long_id": "google-sql-pg-log-disconnections",
			"rule_description": "Ensure that logging of disconnections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable disconnection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-disconnections/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log disconnections.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0020",
			"long_id": "google-sql-pg-log-lock-waits",
			"rule_description": "Ensure that logging of lock waits is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Issues leading to denial of service may not be identified.",
			"resolution": "Enable lock wait logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/sql/pg-log-lock-waits/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log lock waits.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_sql_database_instance.master_instance",
			"location": {
				"filename": "/terraform/terraform/gcp/big_data.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GCP-0066",
			"long_id": "google-storage-bucket-encryption-customer-key",
			"rule_description": "Cloud Storage buckets should be encrypted with a customer-managed key.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Using unmanaged keys does not allow for proper key management.",
			"resolution": "Encrypt Cloud Storage buckets using customer-managed keys.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/bucket-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#encryption"
			],
			"description": "Storage bucket encryption does not use a customer-managed key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "google_storage_bucket.terragoat_website",
			"location": {
				"filename": "/terraform/terraform/gcp/gcs.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GCP-0002",
			"long_id": "google-storage-enable-ubla",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/enable-ubla/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access"
			],
			"description": "Bucket has uniform bucket level access disabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "google_storage_bucket.terragoat_website",
			"location": {
				"filename": "/terraform/terraform/gcp/gcs.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GCP-0001",
			"long_id": "google-storage-no-public-access",
			"rule_description": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Public exposure of sensitive data.",
			"resolution": "Restrict public access to the bucket.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/google/storage/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members"
			],
			"description": "Bucket allows public access.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "google_storage_bucket_iam_binding.allow_public_read",
			"location": {
				"filename": "/terraform/terraform/gcp/gcs.tf",
				"start_line": 19,
				"end_line": 19
			}
		}
	]
}
