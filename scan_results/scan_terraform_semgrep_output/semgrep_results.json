{"errors": [], "paths": {"_comment": "<add --verbose for a list of skipped paths>", "scanned": ["terraform/alicloud/bucket.tf", "terraform/alicloud/provider.tf", "terraform/alicloud/rds.tf", "terraform/alicloud/trail.tf", "terraform/aws/consts.tf", "terraform/aws/db-app.tf", "terraform/aws/ec2.tf", "terraform/aws/ecr.tf", "terraform/aws/eks.tf", "terraform/aws/elb.tf", "terraform/aws/es.tf", "terraform/aws/iam.tf", "terraform/aws/kms.tf", "terraform/aws/lambda.tf", "terraform/aws/neptune.tf", "terraform/aws/providers.tf", "terraform/aws/rds.tf", "terraform/aws/s3.tf", "terraform/azure/aks.tf", "terraform/azure/app_service.tf", "terraform/azure/application_gateway.tf", "terraform/azure/instance.tf", "terraform/azure/key_vault.tf", "terraform/azure/logging.tf", "terraform/azure/mssql.tf", "terraform/azure/networking.tf", "terraform/azure/policies.tf", "terraform/azure/provider.tf", "terraform/azure/random.tf", "terraform/azure/resource_group.tf", "terraform/azure/roles.tf", "terraform/azure/security_center.tf", "terraform/azure/sql.tf", "terraform/azure/storage.tf", "terraform/azure/variables.tf", "terraform/gcp/big_data.tf", "terraform/gcp/gcs.tf", "terraform/gcp/gke.tf", "terraform/gcp/instances.tf", "terraform/gcp/networks.tf", "terraform/gcp/provider.tf", "terraform/gcp/variables.tf", "terraform/oracle/bucket.tf", "terraform/oracle/compartment.tf", "terraform/oracle/data.tf", "terraform/oracle/provider.tf", "terraform/oracle/variables.tf"]}, "results": [{"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-alias-ip-enabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "e03102b02a3b993f4f1a5c2aa6927eb1c1e5ea5228412533c9a35f82c5371233b263bc41507cab5ab8f58769dd06eb5bb96626d20cf31616a3266dc78096ff29_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure Kubernetes Cluster is created with Alias IP ranges enabled", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-compute-shielded-vm", "end": {"col": 9, "line": 3, "offset": 48}, "extra": {"engine_kind": "OSS", "fingerprint": "851191a7e4e804ddbfdbe947166955ed1e25cf88499bd2e31e60c808a7721f706f8b9628914db35f697fc3d0af5bc3640b5aa9feca43dfe06c178fc6d839d5dd_0", "is_ignored": false, "lines": "resource \"google_compute_instance\" \"server\" {", "message": "Ensure Compute instances are launched with Shielded VM enabled", "metadata": {"category": "best-practice", "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 3, "offset": 40}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-nodepool-secure-boot-for-shielded-nodes", "end": {"col": 9, "line": 24, "offset": 658}, "extra": {"engine_kind": "OSS", "fingerprint": "555f9c3cf604c2e12832b76519852af66c45c721b12fea9c3ad380e0d6bea6434ef06c806ba87d7287ab55fee1d3fd5d769bc88342128a305efb6003e066071a_0", "is_ignored": false, "lines": "resource \"google_container_node_pool\" \"custom_node_pool\" {", "message": "Ensure Secure Boot for Shielded GKE Nodes is Enabled\t", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 24, "offset": 650}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-use-cos-image", "end": {"col": 9, "line": 24, "offset": 658}, "extra": {"engine_kind": "OSS", "fingerprint": "5de72fb1c4ad0d947a8b4164216a6e19d2c73f5208490af61f1988c39af194ac268d243579aba15669f10ff2bfc3fb9293a8393ed8c474bf822225288992d4c9_0", "is_ignored": false, "lines": "resource \"google_container_node_pool\" \"custom_node_pool\" {", "message": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 24, "offset": 650}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-metadata-server-enabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "f5a843cf06bc17b5050c6478cbebb4b1afc7684b4ea3fe2a7f36ab8b70c1a7eefcde6114eb727093eeeecb9f644344de4b047d776ae89087611fc9cb8b3cf647_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure the GKE Metadata Server is Enabled\t", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-has-labels", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "060f8548ccf3f6fd8c169a8976a539a3e8da3ed2aef94e813c4889c1ccc92a9227dff121a84fb417cb3f26b09eb4285ea34e73aa09dc3a108227d1bca6b2bf6d_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure Kubernetes Clusters are configured with Labels", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-binary-authorization", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "79805d643a36c5a401f9ead81d21a64b69850141a35aa6f43ef14d9ef887074236ebdddd3c8295dd13cebf8bcbfbbe1c1bef4b80c3ff4c1ea2e53f51e99a63e6_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure use of Binary Authorization\t", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-storage-versioning-enabled", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "b2dfb14839b0c9e013cd8d0a6e18020dc2658a272fa09b12eb9557fb7693bb975a8405b1de28aff02fd3938d693da421281410c85a09b38b490bc09ff720abca_0", "is_ignored": false, "lines": "resource \"google_storage_bucket\" \"terragoat_website\" {", "message": "Ensure Cloud storage has versioning enabled", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gcs.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-sql-backup-configuration-enabled", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "06c74cf5ba8cf3f143955183cc953bb322a9bba8f38cc34a67db925263f24d50d99d042790413fbf178426e4caffbea519c6f40b5c1fe6deb85b15c505520725_0", "is_ignored": false, "lines": "resource \"google_sql_database_instance\" \"master_instance\" {", "message": "Ensure all Cloud SQL database instance have backup configuration enabled", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/big_data.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-gke-nodepool-metadata-server-enabled", "end": {"col": 9, "line": 24, "offset": 658}, "extra": {"engine_kind": "OSS", "fingerprint": "a31be321e61cc6e4c6e9067f34ec87f78baa73a24994053603689da4e5ce55335df9208c57bd4d7613a638c0b19a088a4b2317984ea2d725ba053f6cef4ff1e1_0", "is_ignored": false, "lines": "resource \"google_container_node_pool\" \"custom_node_pool\" {", "message": "Ensure the GKE Metadata Server is Enabled\t", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 24, "offset": 650}}, {"check_id": "semgrep-rules.gcp.best-practice.gcp-ipv6-private-google-enabled", "end": {"col": 9, "line": 7, "offset": 221}, "extra": {"engine_kind": "OSS", "fingerprint": "5595bd9fb849d657814e76a8ebae1b0e1e4de5ea508cac678a1ca245d0289bff2621e60bc763dcfabb6747e74878764e66ae13c47d16bd6721023bb643e04b0e_0", "is_ignored": false, "lines": "resource \"google_compute_subnetwork\" \"public-subnetwork\" {", "message": "Ensure that Private google access is enabled for IPV6", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/networks.tf", "start": {"col": 1, "line": 7, "offset": 213}}, {"check_id": "semgrep-rules.gcp.security.gcp-cloud-storage-logging", "end": {"col": 2, "line": 15, "offset": 594}, "extra": {"engine_kind": "OSS", "fingerprint": "89aec4bb69bcad9ba31d5fc09c37413330cb53be58e9dbd17b7c49bb52ef958be14a6d9d710a3c45f61b4fd3bc627ca948d91351742f54385c9a933dfcb8403c_0", "is_ignored": false, "lines": "resource \"google_storage_bucket\" \"terragoat_website\" {\n  name          = \"terragot-${var.environment}\"\n  location      = var.location\n  force_destroy = true\n  labels = {\n    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"\n    git_file             = \"terraform__gcp__gcs_tf\"\n    git_last_modified_at = \"2022-01-19-17-02-27\"\n    git_last_modified_by = \"jameswoolfenden\"\n    git_modifiers        = \"jameswoolfenden__nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"bd00cd2e-f53f-4daf-8d4d-74c47846c1cc\"\n  }\n}", "message": "Ensure bucket logs access.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-778: Insufficient Logging"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A10:2017 - Insufficient Logging & Monitoring", "A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["vuln"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "terragoat_website", "end": {"col": 52, "line": 1, "offset": 51}, "start": {"col": 35, "line": 1, "offset": 34}}}, "severity": "WARNING"}, "path": "terraform/gcp/gcs.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.security.gcp-sql-database-require-ssl", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "676cf6300e1a030d3db735d076951871d07d98945b609e8117aca540891d38e214073f0165c75db1c611963b426f6a720284f65a1ddae1de358ffe526d3aaf82_0", "is_ignored": false, "lines": "resource \"google_sql_database_instance\" \"master_instance\" {", "message": "Ensure all Cloud SQL database instance requires all incoming connections to use SSL", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["vuln"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/big_data.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-client-certificate-disabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "a2ec66e4bc5a6b510646711144b504c79530c66b573c9947713307d06f727b547ceb8555d45cf44924744078317ffada4373bba2083c59119581851f006e9c6d_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure client certificate authentication to Kubernetes Engine Clusters is disabled", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-compute-boot-disk-encryption", "end": {"col": 2, "line": 34, "offset": 1046}, "extra": {"engine_kind": "OSS", "fingerprint": "e8a91f2c6692085ee625c905b710e4cb7ea3bf8de63bddb77f591c782154e22bff45615bc596fd07684b2d7d0b6694584da843a5722680887f82e973a3b57763_0", "is_ignored": false, "lines": "resource \"google_compute_instance\" \"server\" {\n  machine_type = \"n1-standard-1\"\n  name         = \"terragoat-${var.environment}-machine\"\n  zone         = data.google_compute_zones.zones.names[0]\n  boot_disk {\n    initialize_params {\n      image = \"debian-cloud/debian-9\"\n    }\n    auto_delete = true\n  }\n  network_interface {\n    subnetwork = google_compute_subnetwork.public-subnetwork.name\n    access_config {}\n  }\n  can_ip_forward = true\n\n  metadata = {\n    block-project-ssh-keys = false\n    enable-oslogin         = false\n    serial-port-enable     = true\n  }\n  labels = {\n    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"\n    git_file             = \"terraform__gcp__instances_tf\"\n    git_last_modified_at = \"2022-01-19-17-02-27\"\n    git_last_modified_by = \"jameswoolfenden\"\n    git_modifiers        = \"jameswoolfenden__nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"cd562b76-fbce-4e60-8c75-c9f43d7ffc16\"\n  }\n}", "message": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "server", "end": {"col": 43, "line": 3, "offset": 82}, "start": {"col": 37, "line": 3, "offset": 76}}}, "severity": "WARNING"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 3, "offset": 40}}, {"check_id": "semgrep-rules.gcp.security.gcp-compute-serial-ports", "end": {"col": 9, "line": 3, "offset": 48}, "extra": {"engine_kind": "OSS", "fingerprint": "3c86bfae988347d871ad92ff75d32300d88ba49d4ff4bb2a9bac1b8a99e5b88ce49d90265039460534734fb1901d2d9db36bfc22d12698a72f1af72f7db893b0_0", "is_ignored": false, "lines": "resource \"google_compute_instance\" \"server\" {", "message": "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance\t", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 3, "offset": 40}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-legacy-auth-enabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "3139bf04ffa67fb5793f765ff1e6cfab9b60322baa68cd48dfcec8c349c7537b8e4954a0fa344511e06cce4a86a5d7b25e8adf71379111a44efcbca652b8d594_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-compute-os-login", "end": {"col": 9, "line": 3, "offset": 48}, "extra": {"engine_kind": "OSS", "fingerprint": "74537cd5b60f92a4a9bcd589d5074b6c123f1800710d71edd7e68d1c4ce310d2ead423b9dda60a930be08eee91df4e3e428382263e1744cf18f5f69b3cba8bd5_0", "is_ignored": false, "lines": "resource \"google_compute_instance\" \"server\" {", "message": "Ensure that no instance in the project overrides the project setting for enabling OSLogin (OSLogin needs to be enabled in project metadata for all instances)\t", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 3, "offset": 40}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-secure-boot-for-shielded-nodes", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "5573ed20e0d609eac726abe26d2b1d13294a5af21b085c2901c1df26668b436a180bd246cbd5ff78dfe616a90769da2b8e43f9179f2b77ec35845ebf19343081_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure Secure Boot for Shielded GKE Nodes is Enabled\t", "metadata": {"category": "best-practice", "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-legacy-instance-metadata-disabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "1c6041f650da5b70ab7141f640f3ce603941968daa43f405e1680a653326e707ae456b253ef7297b6791c56e5ed46644e0105f47286669c81cf7348cbc55d225_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure legacy Compute Engine instance metadata APIs are Disabled", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-cluster-logging", "end": {"col": 2, "line": 22, "offset": 648}, "extra": {"engine_kind": "OSS", "fingerprint": "33cd095b2eb216cb042303219130ff7eb1c458a1c8bd37d6a8ad55ebe567c8bcaeecc564d4930092837dab407b61536f86e160055fb3e367e271da4deade4692_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n  location           = var.region\n  initial_node_count = 1\n\n  enable_legacy_abac       = true\n  monitoring_service       = \"none\"\n  remove_default_node_pool = true\n  network                  = google_compute_network.vpc.name\n  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n  master_authorized_networks_config {\n    cidr_blocks {\n      cidr_block = \"0.0.0.0/0\"\n    }\n  }\n}", "message": "Ensure logging is set to Enabled on Kubernetes Engine Clusters", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "workload_cluster", "end": {"col": 54, "line": 6, "offset": 151}, "start": {"col": 38, "line": 6, "offset": 135}}}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-enabled-vpc-flow-logs", "end": {"col": 2, "line": 22, "offset": 648}, "extra": {"engine_kind": "OSS", "fingerprint": "530d2cfbdda17e4865d19e33fa45bc626eabcbbafdd19a328dab04bbe19acd7e3ec81c4bff16592bdfe512ff7018296d7a184f91be57c1dde31b062712a24296_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n  location           = var.region\n  initial_node_count = 1\n\n  enable_legacy_abac       = true\n  monitoring_service       = \"none\"\n  remove_default_node_pool = true\n  network                  = google_compute_network.vpc.name\n  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n  master_authorized_networks_config {\n    cidr_blocks {\n      cidr_block = \"0.0.0.0/0\"\n    }\n  }\n}", "message": "Enable VPC Flow Logs and Intranode Visibility", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "workload_cluster", "end": {"col": 54, "line": 6, "offset": 151}, "start": {"col": 38, "line": 6, "offset": 135}}}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-pod-security-policy-enabled", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "f3bab33b0ca4ba89b00ae12fa7b2aa8cabf27c9099e23e4fa9c8e485e648133a029003406010239b947e520e6cba60259fb4ed43ce551b3ee717a94dff80f298_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-compute-ip-forward", "end": {"col": 9, "line": 3, "offset": 48}, "extra": {"engine_kind": "OSS", "fingerprint": "40afb6ac5623a14664caefa229f3ad252d5db5ab74bad52eb4baed409ac00b6493f0320085351c5dc15c6ff448732ec9379a5792ef48f5957100e2f552ba86fc_0", "is_ignored": false, "lines": "resource \"google_compute_instance\" \"server\" {", "message": "Ensure that IP forwarding is not enabled on Instances. This lets the instance act as a traffic router and receive traffic not intended for it, which may route traffic through unintended passages.\t", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "INFO"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 3, "offset": 40}}, {"check_id": "semgrep-rules.gcp.security.gcp-compute-disk-encryption", "end": {"col": 2, "line": 48, "offset": 1588}, "extra": {"engine_kind": "OSS", "fingerprint": "d08615d16ed38fc9fdbe98f16aabddec1c8c6dbe28705fd8a1f787d1beb4ab4591378289fdf60e0059d84d187eb87a08d8a34aca8ab21d8f1b035433aa9772b5_0", "is_ignored": false, "lines": "resource \"google_compute_disk\" \"unencrypted_disk\" {\n  name = \"terragoat-${var.environment}-disk\"\n  labels = {\n    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"\n    git_file             = \"terraform__gcp__instances_tf\"\n    git_last_modified_at = \"2022-01-19-17-02-27\"\n    git_last_modified_by = \"jameswoolfenden\"\n    git_modifiers        = \"jameswoolfenden__nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"bf87b7d7-a9d8-4f03-a0d4-8a4cbb647d03\"\n  }\n}", "message": "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "unencrypted_disk", "end": {"col": 49, "line": 36, "offset": 1096}, "start": {"col": 33, "line": 36, "offset": 1080}}}, "severity": "WARNING"}, "path": "terraform/gcp/instances.tf", "start": {"col": 1, "line": 36, "offset": 1048}}, {"check_id": "semgrep-rules.gcp.security.gcp-bigquery-dataset-encrypted-with-cmk", "end": {"col": 2, "line": 37, "offset": 1059}, "extra": {"engine_kind": "OSS", "fingerprint": "3972d281faaac95e38805311b0d725f8af325e2ca8b8c38bbeca86b5b6906c0e62a4429f70e21c22a0b50d4273bf1ab0defbe520c176c26020a9fbb08e22d1c1_0", "is_ignored": false, "lines": "resource \"google_bigquery_dataset\" \"dataset\" {\n  dataset_id = \"terragoat_${var.environment}_dataset\"\n  access {\n    special_group = \"allAuthenticatedUsers\"\n    role          = \"READER\"\n  }\n  labels = {\n    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"\n    git_file             = \"terraform__gcp__big_data_tf\"\n    git_last_modified_at = \"2022-01-19-17-02-27\"\n    git_last_modified_by = \"jameswoolfenden\"\n    git_modifiers        = \"jameswoolfenden__nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"2560d883-bc3a-4cb6-b9fc-fb666edf626e\"\n  }\n}", "message": "Ensure that BigQuery datasets are not anonymously or publicly accessible\t", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://docs.bridgecrew.io/docs/google-cloud-policy-index"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "dataset", "end": {"col": 44, "line": 21, "offset": 471}, "start": {"col": 37, "line": 21, "offset": 464}}}, "severity": "WARNING"}, "path": "terraform/gcp/big_data.tf", "start": {"col": 1, "line": 21, "offset": 428}}, {"check_id": "semgrep-rules.gcp.security.gcp-sqlserver-no-public-ip", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "2ec7f38e3e47edb336afdcd238b5adc47c1e6723e2123a00738c534bb0f37904d8e99e4612caa82a64b5a6dc73f8e5a5ac7ddd94588cdf2fa53f03a438741de8_0", "is_ignored": false, "lines": "resource \"google_sql_database_instance\" \"master_instance\" {", "message": "Ensure Cloud SQL database does not have public IP", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/big_data.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.security.gcp-storage-bucket-uniform-access", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "f0c1842d1d5d16ea967cc4468ba9d503d60531ac06b6947fdf78c8c784945903cef375268d6826420f5fe08d5e167ae567e96cf76f101c1df8b6a902f1e7282a_0", "is_ignored": false, "lines": "resource \"google_storage_bucket\" \"terragoat_website\" {", "message": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gcs.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-kubernetes-rbac-google-groups", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "113ef2bbc3246385b902705f7a0af6b4d3c349af93dcfd63486a649a62abc2a524531518195414524def263ea418b5c40f60610a44fdf9680a5df0756391de22_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Manage Kubernetes RBAC users with Google Groups for GKE", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-monitoring-enabled", "end": {"col": 2, "line": 22, "offset": 648}, "extra": {"engine_kind": "OSS", "fingerprint": "baef3a3a2ee303da351285f3014b964acf6c4017307ad02754eaf4c7891e2f523f1899930b230a903c15780bec99869ea73f4561fb3938aa650dee2f5f7661b3_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {\n  name               = \"terragoat-${var.environment}-cluster\"\n  logging_service    = \"none\"\n  location           = var.region\n  initial_node_count = 1\n\n  enable_legacy_abac       = true\n  monitoring_service       = \"none\"\n  remove_default_node_pool = true\n  network                  = google_compute_network.vpc.name\n  subnetwork               = google_compute_subnetwork.public-subnetwork.name\n  master_authorized_networks_config {\n    cidr_blocks {\n      cidr_block = \"0.0.0.0/0\"\n    }\n  }\n}", "message": "Ensure monitoring is set to Enabled on Kubernetes Engine Clusters", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "workload_cluster", "end": {"col": 54, "line": 6, "offset": 151}, "start": {"col": 38, "line": 6, "offset": 135}}}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-private-cluster-config", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "a851eb3bc6df00a257b36ed355902c773aad7a0aa0f871c658e7b933531a24f0a449d78a5a4176660781b5f41bc8ba2771eda8387a55f89642f4989f9e295ed6_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure Kubernetes Cluster is created with Private cluster enabled", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-sql-public-database", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "bbed81726d5034c005978c9be461c0bf9a9217aff04b35d9692941948431fb116026de7971d51fd1ea2a7d989a90e2bc975408666105f53134fcb5db7a3a2543_0", "is_ignored": false, "lines": "resource \"google_sql_database_instance\" \"master_instance\" {", "message": "Ensure that Cloud SQL database Instances are not open to the world", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["vuln"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/big_data.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.gcp.security.gcp-sub-network-logging-enabled", "end": {"col": 2, "line": 17, "offset": 569}, "extra": {"engine_kind": "OSS", "fingerprint": "ebb6fec95e7ca998087341526f12c4060a158a2a5de1924c9cf96cf1d2356ac3195cd88d34417daa1c5d6b8dfe378438be0c4f976b7b5cb041ccf0089a76c376_0", "is_ignored": false, "lines": "resource \"google_compute_subnetwork\" \"public-subnetwork\" {\n  name          = \"terragoat-${var.environment}-public-subnetwork\"\n  ip_cidr_range = \"10.0.0.0/24\"\n  region        = var.region\n  network       = google_compute_network.vpc.id\n\n  secondary_ip_range {\n    range_name    = \"tf-test-secondary-range-update1\"\n    ip_cidr_range = \"192.168.10.0/24\"\n  }\n}", "message": "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {"$ANYTHING": {"abstract_content": "public-subnetwork", "end": {"col": 56, "line": 7, "offset": 268}, "start": {"col": 39, "line": 7, "offset": 251}}}, "severity": "WARNING"}, "path": "terraform/gcp/networks.tf", "start": {"col": 1, "line": 7, "offset": 213}}, {"check_id": "semgrep-rules.gcp.security.gcp-gke-basic-auth", "end": {"col": 9, "line": 6, "offset": 106}, "extra": {"engine_kind": "OSS", "fingerprint": "3d6f681d70a39ba71d02854aca1f00435661736237e20f9281cddf03dde28f3d080a4f5a0f052003f28db3599bc402158f9f6b7ae0d1ff6c530e22ae8802feff_0", "is_ignored": false, "lines": "resource \"google_container_cluster\" \"workload_cluster\" {", "message": "Ensure GKE basic auth is disabled\t", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/gke.tf", "start": {"col": 1, "line": 6, "offset": 98}}, {"check_id": "semgrep-rules.gcp.security.gcp-sub-network-private-google-enabled", "end": {"col": 9, "line": 7, "offset": 221}, "extra": {"engine_kind": "OSS", "fingerprint": "44b5fb7ac469934bbb74b72d121cf26a3b59792f30476fdc97e5fdcd4bc8b160662c8c6831af503bbe25002cb0f7f48f999b1412e6b7b115157e6344192031cc_0", "is_ignored": false, "lines": "resource \"google_compute_subnetwork\" \"public-subnetwork\" {", "message": "Ensure that private_ip_google_access is enabled for Subnet", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "gcp"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/gcp/networks.tf", "start": {"col": 1, "line": 7, "offset": 213}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 153, "offset": 7076}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 153, "offset": 7068}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 167, "offset": 7672}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_1", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 167, "offset": 7664}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 181, "offset": 8268}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_2", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 181, "offset": 8260}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 195, "offset": 8864}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_3", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 195, "offset": 8856}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 209, "offset": 9460}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_4", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 209, "offset": 9452}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 222, "offset": 10000}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_5", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 222, "offset": 9992}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 236, "offset": 10596}, "extra": {"engine_kind": "OSS", "fingerprint": "a52f005986ff5a4b369d692870eed13d12d33d807bad8a0d0f4c39255481990262189e3c6ef362316efd074debecee72b8d1eb4b323bcfe8772c3b86055a9cbd_6", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 236, "offset": 10588}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-toadmins-enabled", "end": {"col": 9, "line": 31, "offset": 1249}, "extra": {"engine_kind": "OSS", "fingerprint": "c02b7002117aa71b729186a28ec4b5feec7addc3b30589d9859038470f431e97cf1698d59894d7439407b4ccf14c3febd2b6eb1e7c00310e496920d4fd164266_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {", "message": "Ensure that Email service and co-administrators is Enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 31, "offset": 1241}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-geo-backup-enabled", "end": {"col": 9, "line": 73, "offset": 2858}, "extra": {"engine_kind": "OSS", "fingerprint": "08b5b2841c6cc0bd1bbf92df532d32d6da22c1d5fb3afb9a6569d6a78f1b245247516edbc997d3c07cd639eae820a0d8d9962cd863bd8f51247eb2c88b03b60a_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_server\" \"example\" {", "message": "Ensure that PostgreSQL server enables geo-redundant backups", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 73, "offset": 2850}}, {"check_id": "semgrep-rules.azure.best-practice.azure-secret-expiration-date", "end": {"col": 9, "line": 58, "offset": 1878}, "extra": {"engine_kind": "OSS", "fingerprint": "c574334814414fe1e12f854732c56f3d85b112e0cc5c186998e3e96c1569404011c3432af462890879570d7952becaec914fbfb8eb37727ccb7fe86ab4f0b3e0_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_secret\" \"secret\" {", "message": "Ensure that the expiration date is set on all secrets", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 58, "offset": 1870}}, {"check_id": "semgrep-rules.azure.best-practice.azure-keyvault-enables-firewall-rules-settings", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "bcddc0472718c70b2d1b036d95e410772c8708843c85fda8917405e98545c8224f934d3600a5dccf17d48d0961dcea642c3e700e90d9657e8e09b58da91616ab_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault\" \"example\" {", "message": "Ensure that key vault allows firewall rules settings", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.best-practice.azure-appgateway-enables-waf", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "04a528c5d007154fea2979030bc83d2a9dbfc626d6f9fa1266d4f829213d76e084fb3ae538006d63af71b312f0699f01b514c91b0ea0d44decc924aeb3c7286d_0", "is_ignored": false, "lines": "resource \"azurerm_application_gateway\" \"network\" {", "message": "Ensure that Application Gateway enables WAF", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/application_gateway.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-ssl-enforcement-enabled", "end": {"col": 9, "line": 73, "offset": 2858}, "extra": {"engine_kind": "OSS", "fingerprint": "7a0d374e709a268503f8f1c7d5de1233cd728bc8db0337310668f0d807be1da41cb23b1eafb1830cd92b719a8400453a8a88bf666fd9730e79ddc064c1c52efe_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_server\" \"example\" {", "message": "Ensure Enforce SSL connection is set to Enabled for PostgreSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 73, "offset": 2850}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 153, "offset": 7076}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 153, "offset": 7068}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 167, "offset": 7672}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_1", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 167, "offset": 7664}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 181, "offset": 8268}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_2", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 181, "offset": 8260}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 195, "offset": 8864}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_3", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 195, "offset": 8856}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 209, "offset": 9460}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_4", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 209, "offset": 9452}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 222, "offset": 10000}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_5", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 222, "offset": 9992}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 236, "offset": 10596}, "extra": {"engine_kind": "OSS", "fingerprint": "6af9bd14a1bc3ab4bf9fa057b22ed887538d3295b811d63ee8c4b48455e6fad7e776b6f3519922546e8cbf8634f1edd8c366c3dd81cd5c911c3b3248516fe1ad_6", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 236, "offset": 10588}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-threat-detection-types", "end": {"col": 9, "line": 31, "offset": 1249}, "extra": {"engine_kind": "OSS", "fingerprint": "1de07971151225721ebcaa07def39ed5241426e2470b6e08acaf010e7bfe35c78f73d314159339087421a3a028c6012fe50c4b43d7f68b4719abb92a02cef577_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {", "message": "Ensure that Threat Detection types is set to All", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 31, "offset": 1241}}, {"check_id": "semgrep-rules.azure.best-practice.azure-mysql-geo-backup-enabled", "end": {"col": 9, "line": 44, "offset": 1749}, "extra": {"engine_kind": "OSS", "fingerprint": "cb0acd9fd80b7fb87f315e8069d11a22a0649b7981e42b2be61118cb3b9d0d63078aac6a3dc125678289fd073e99b1ba70994d1d30b2cbb6bc58af2df495bac7_0", "is_ignored": false, "lines": "resource \"azurerm_mysql_server\" \"example\" {", "message": "Ensure that MySQL server enables geo-redundant backups", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 44, "offset": 1741}}, {"check_id": "semgrep-rules.azure.best-practice.azure-keyvault-enables-purge-protection", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "0718de12b60f0ca6c2ba47925f39b6e1b39670ef26e1064d97564a3fc37660209a786abfe54d94f61a5022e763f096ef5f3f2a9f02e9850585b4375382551fd7_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault\" \"example\" {", "message": "Ensure that key vault enables purge protection", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.best-practice.azure-keyvault-recovery-enabled", "end": {"col": 2, "line": 31, "offset": 1123}, "extra": {"engine_kind": "OSS", "fingerprint": "83146bef4ca05313e860523e3e8ef7a76b0fdd0bcb4a374023607978434faa2b22e7a88fae959ddbfc517e7a12b81ea6b39ea45ae79a25843b9ea231073de7fe_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault\" \"example\" {\n  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n  tenant_id           = data.azurerm_client_config.current.tenant_id\n  sku_name            = \"premium\"\n  access_policy {\n    tenant_id = data.azurerm_client_config.current.tenant_id\n    object_id = data.azurerm_client_config.current.object_id\n    key_permissions = [\n      \"create\",\n      \"get\",\n    ]\n    secret_permissions = [\n      \"set\",\n    ]\n  }\n  tags = merge({\n    environment = var.environment\n    terragoat   = true\n    }, {\n    git_commit           = \"81738b80d571fa3034633690d13ffb460e1e7dea\"\n    git_file             = \"terraform/azure/key_vault.tf\"\n    git_last_modified_at = \"2020-06-19 21:14:50\"\n    git_last_modified_by = \"Adin.Ermie@outlook.com\"\n    git_modifiers        = \"Adin.Ermie/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"79afeacc-248a-4015-a4fa-76a6a57f06e2\"\n  })\n}", "message": "Ensure the key vault is recoverable https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable", "metadata": {"category": "best-practice", "references": ["https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.best-practice.azure-mysql-server-tlsenforcement-enabled", "end": {"col": 9, "line": 44, "offset": 1749}, "extra": {"engine_kind": "OSS", "fingerprint": "3d565f92a31c62e1185331456bd22a265e4e6a97af85824503ac9f75a5271952afaa3b11f5557a5bb7d3ecdae45723f8cf7f8936a92ac0db0c4df6817e18b076_0", "is_ignored": false, "lines": "resource \"azurerm_mysql_server\" \"example\" {", "message": "Ensure Enforce SSL connection is set to Enabled for MySQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 44, "offset": 1741}}, {"check_id": "semgrep-rules.azure.best-practice.azure-mysql-threat-detection-enabled", "end": {"col": 9, "line": 44, "offset": 1749}, "extra": {"engine_kind": "OSS", "fingerprint": "aa58c5b4a655eaede9fc54c4ace499f2bd96d834ec68c41320d20de0c2d6b93e249dd91d97651b1ce5f39e7c871db759978bce95c0bbc7e205e96e206990aca8_0", "is_ignored": false, "lines": "resource \"azurerm_mysql_server\" \"example\" {", "message": "Ensure that MySQL server enables Threat detection policy", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 44, "offset": 1741}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-log-connections-enabled", "end": {"col": 9, "line": 98, "offset": 3957}, "extra": {"engine_kind": "OSS", "fingerprint": "995a9f7b162b4d977e83dfaaf35ed8a7b462953026b30a3b93939623ea04d145b9ed0b290c6e9d8121e5e9ccc5ceed2b085cad2bf0762464d31db4c2b1051de5_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {", "message": "Ensure server parameter log_connections is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 98, "offset": 3949}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-log-connections-enabled", "end": {"col": 9, "line": 105, "offset": 4228}, "extra": {"engine_kind": "OSS", "fingerprint": "995a9f7b162b4d977e83dfaaf35ed8a7b462953026b30a3b93939623ea04d145b9ed0b290c6e9d8121e5e9ccc5ceed2b085cad2bf0762464d31db4c2b1051de5_1", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"example\" {", "message": "Ensure server parameter log_connections is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 105, "offset": 4220}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-connection-throttling-enabled", "end": {"col": 9, "line": 98, "offset": 3957}, "extra": {"engine_kind": "OSS", "fingerprint": "3926855140b9679c5b794b7b6ba7d00782c3fc357f0b391f54e6ef49522e18aa868f065a66aa11320836c93d16162ddd9f41baed805ce6d256da7ed34a33eeeb_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {", "message": "Ensure server parameter connection_throttling is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 98, "offset": 3949}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-connection-throttling-enabled", "end": {"col": 9, "line": 105, "offset": 4228}, "extra": {"engine_kind": "OSS", "fingerprint": "3926855140b9679c5b794b7b6ba7d00782c3fc357f0b391f54e6ef49522e18aa868f065a66aa11320836c93d16162ddd9f41baed805ce6d256da7ed34a33eeeb_1", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"example\" {", "message": "Ensure server parameter connection_throttling is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 105, "offset": 4220}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-log-checkpoint-enabled", "end": {"col": 9, "line": 98, "offset": 3957}, "extra": {"engine_kind": "OSS", "fingerprint": "91fa6bf1bb50c4201130e6a60a18d37036f628e15bf87b8e9bb923d2e33c8fd5ec10e7de0dd8c6b07dfb0978487eeabe566b95c48e101579b75603c328bf33c3_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {", "message": "Ensure server parameter log_checkpoints is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 98, "offset": 3949}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-server-log-checkpoint-enabled", "end": {"col": 9, "line": 105, "offset": 4228}, "extra": {"engine_kind": "OSS", "fingerprint": "91fa6bf1bb50c4201130e6a60a18d37036f628e15bf87b8e9bb923d2e33c8fd5ec10e7de0dd8c6b07dfb0978487eeabe566b95c48e101579b75603c328bf33c3_1", "is_ignored": false, "lines": "resource \"azurerm_postgresql_configuration\" \"example\" {", "message": "Ensure server parameter log_checkpoints is set to ON for PostgreSQL Database Server", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 105, "offset": 4220}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-enabled", "end": {"col": 9, "line": 209, "offset": 9460}, "extra": {"engine_kind": "OSS", "fingerprint": "1b4a63a42f0f5fda67065e19401e6c366d3f0509fabfdd653f1f7838bcb268757f42d4bdb98eede5e97014b3eed08cc998a5c0840c350499d89d8d12719782d9_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {", "message": "Ensure that Send Alerts To is enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 209, "offset": 9452}}, {"check_id": "semgrep-rules.azure.best-practice.azure-sqlserver-email-alerts-enabled", "end": {"col": 9, "line": 31, "offset": 1249}, "extra": {"engine_kind": "OSS", "fingerprint": "05834ae9975acfc0987f648aab5188870a3b495b23ba29eb87dd7c0a4c00a6ecb4ffc2172ba660b57c4a92b25b0adca8dee15df1094a47a3dfd049ff35d16221_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {", "message": "Ensure that Send Alerts To is enabled for MSSQL servers", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 31, "offset": 1241}}, {"check_id": "semgrep-rules.azure.best-practice.azure-postgresql-threat-detection-enabled", "end": {"col": 9, "line": 73, "offset": 2858}, "extra": {"engine_kind": "OSS", "fingerprint": "b2b173b1c2e32bf7e1632a4cf0c4af5d65d5ac296e458e8adb124ba5a1f038d3b49c3131ebb1ea3daf8cf2b9cae320dcf6e9a25c7f72a8b202dcbd2261065f70_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_server\" \"example\" {", "message": "Ensure that PostgreSQL server enables Threat detection policy", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 73, "offset": 2850}}, {"check_id": "semgrep-rules.azure.best-practice.azure-secret-content-type", "end": {"col": 9, "line": 58, "offset": 1878}, "extra": {"engine_kind": "OSS", "fingerprint": "72c8e756e33e7c03f38d6bd45c27170456fb26f594e26bfba60ab4fc7fdb9c364cc8618d2a99b56bdeb7fd4bc87d5e4e0e7f35d42136600913ff41523c47b57d_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_secret\" \"secret\" {", "message": "Ensure that key vault secrets have \u201ccontent_type\u201d set", "metadata": {"category": "best-practice", "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 58, "offset": 1870}}, {"check_id": "semgrep-rules.azure.security.azure-key-no-expiration-date", "end": {"col": 9, "line": 33, "offset": 1133}, "extra": {"engine_kind": "OSS", "fingerprint": "20ead1c13281fbb38a71289f52e888093e515ae6fec58c45fb4f48d29cdcf8e026b332d784b520624db9c454d93e5daed9df1de7ad64cb0fecbdedd4b40cf2cc_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_key\" \"generated\" {", "message": "Ensure that the expiration date is set on all keys", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 33, "offset": 1125}}, {"check_id": "semgrep-rules.azure.security.azure-storage-account-minimum-tlsversion", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "95938feefd94d70dc79e15f18a322d209eba63428b50e9cbc6884d117af8a98074177f2fb7f277f5458b380f621b02b736c6531a6322be427e79871224b821e2_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account\" \"security_storage_account\" {", "message": "Ensure Storage Account is using the latest version of TLS encryption", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.azure-storage-account-minimum-tlsversion", "end": {"col": 9, "line": 23, "offset": 788}, "extra": {"engine_kind": "OSS", "fingerprint": "7fc81036e8b2afa67620760cec06201971bb5e42f68f5de59e995795d433faade3cc88114b96ef17af747d38d11abbab0ae0e35df75e0d03252fd13f7e558d99_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account\" \"example\" {", "message": "Ensure Storage Account is using the latest version of TLS encryption", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/storage.tf", "start": {"col": 1, "line": 23, "offset": 780}}, {"check_id": "semgrep-rules.azure.security.azure-managed-disk-encryption-set", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "77df6d55a33b073ae0f9fc4fbad2adca7732bd4310262b8e67516c4bb96ff7fdb127114355f4da6a07d42094be97298e149cf009ae2a6d10c80d49b0c6b64aff_0", "is_ignored": false, "lines": "resource \"azurerm_managed_disk\" \"example\" {", "message": "Ensure that managed disks use a specific set of disk encryption sets for the customer-managed key encryption", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/storage.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.azure-customrole-definition-subscription-owner", "end": {"col": 24, "line": 9, "offset": 299}, "extra": {"engine_kind": "OSS", "fingerprint": "354586d542a9ff80a76ac91c19777fad6bebbca8d75a67954ae6a3c282fb6b13df7ad276213faa293411975311755f8a3ba7044360b9d644c4e2b021070bfb87_0", "is_ignored": false, "lines": "    actions     = [\"*\"]", "message": "Ensure that no custom subscription owner roles are created", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/roles.tf", "start": {"col": 19, "line": 9, "offset": 294}}, {"check_id": "semgrep-rules.azure.security.azure-key-backedby-hsm", "end": {"col": 9, "line": 33, "offset": 1133}, "extra": {"engine_kind": "OSS", "fingerprint": "15c08a3cc2044271ebeef50ccfca7fdcf5e7201b2ca6b326758817c25311b9e051acc5100c1b01fc98864d73a1d5647f815b94102bf11d0734949ca0bcd7fb5d_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_key\" \"generated\" {", "message": "Ensure that key vault key is backed by HSM", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 33, "offset": 1125}}, {"check_id": "semgrep-rules.azure.security.azure-mysql-public-access-disabled", "end": {"col": 9, "line": 44, "offset": 1749}, "extra": {"engine_kind": "OSS", "fingerprint": "72eded4d770ab3ee1e69e1a8ded72e4c7bd9244c82194ff941b5cc3fe4c4e26a0b5b79cd09b8025af8241ee1b729d11619901088129dd15723e976849eda9de6_0", "is_ignored": false, "lines": "resource \"azurerm_mysql_server\" \"example\" {", "message": "Ensure public network access enabled is set to False for MySQL servers", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 44, "offset": 1741}}, {"check_id": "semgrep-rules.azure.security.azure-postgresql-encryption-enabled", "end": {"col": 9, "line": 73, "offset": 2858}, "extra": {"engine_kind": "OSS", "fingerprint": "b9f77a3cd2017411bf710f90e422faeef8fbe8361642215be3da40a9ee4c97488cf4a9e92d1582d0520bb3b74445ee505fa6b4d7b696955f46c7e80dd4051392_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_server\" \"example\" {", "message": "Ensure that PostgreSQL server enables infrastructure encryption", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 73, "offset": 2850}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 20, "offset": 885}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_0", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql1\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 20, "offset": 877}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 39, "offset": 1778}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_1", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql2\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 39, "offset": 1770}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 58, "offset": 2661}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_2", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql3\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 58, "offset": 2653}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 77, "offset": 3544}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_3", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql4\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 77, "offset": 3536}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 96, "offset": 4427}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_4", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql5\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 96, "offset": 4419}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 115, "offset": 5310}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_5", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql6\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 115, "offset": 5302}}, {"check_id": "semgrep-rules.azure.security.azure-sqlserver-public-access-disabled", "end": {"col": 9, "line": 134, "offset": 6193}, "extra": {"engine_kind": "OSS", "fingerprint": "1fb5dd7a1e57c3d760f54693a93a1b2c91926d00223cbf310602f1e1ff830c6ff4f02a8db8e68c4622dd428df18ab008d9278aa75e2b6496cd5f9129897be854_6", "is_ignored": false, "lines": "resource \"azurerm_mssql_server\" \"mssql7\" {", "message": "Ensure that SQL server disables public network access", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 134, "offset": 6185}}, {"check_id": "semgrep-rules.azure.security.azure-postgresql-server-public-access-disabled", "end": {"col": 9, "line": 73, "offset": 2858}, "extra": {"engine_kind": "OSS", "fingerprint": "028a67f2892569a06d8eb58fc5180e493d11df6c510d9434a00be88b202e10bfe7c80f5f343cb20e22982e105f13b18366dc5bee2d4b91ad8897177be7a8d467_0", "is_ignored": false, "lines": "resource \"azurerm_postgresql_server\" \"example\" {", "message": "Ensure public network access enabled is set to False for PostgreSQL servers", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/sql.tf", "start": {"col": 1, "line": 73, "offset": 2850}}, {"check_id": "semgrep-rules.azure.security.azure-managed-disk-encryption", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "10b71348a496fac1de500fd0e901b47320113ea40378f90e5b5015aa766754646dce3631f8e95d2ae7dcfdddd937369a6480f9a2f8647aba164c32d640d82c28_0", "is_ignored": false, "lines": "resource \"azurerm_managed_disk\" \"example\" {", "message": "Ensure Azure managed disk has encryption enabled", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/storage.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.keyvault.keyvault-specify-network-acl", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "d5a93336cf5a0bb1df2a043c8d850451f1a50282f1ef00e1503ae360d0aa581515feec06f33eaa7d8aa79dc5db1d572df09747b0dda21e9babf7c697764a4db5_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault\" \"example\" {", "message": "Network ACLs allow you to reduce your exposure to risk by limiting what can access your key vault. The default action of the Network ACL should be set to deny for when IPs are not matched. Azure services can be allowed to bypass.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls", "https://docs.microsoft.com/en-us/azure/key-vault/general/network-security"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "ERROR"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.keyvault.keyvault-content-type-for-secret", "end": {"col": 9, "line": 58, "offset": 1878}, "extra": {"engine_kind": "OSS", "fingerprint": "ed42cf7abf0218d8af86a1a8393b2d7a40fc1e5544eb793f4989fbfa31fcfc7ca81e152bf0d78329f079a805ef1f26030bf4b66a24027aa6f0669bb90729eeaa_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_secret\" \"secret\" {", "message": "Key vault Secret should have a content type set", "metadata": {"category": "correctness", "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type", "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "INFO"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 58, "offset": 1870}}, {"check_id": "semgrep-rules.azure.security.keyvault.keyvault-purge-enabled", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "faf97492370508cda0c762e817d92e86fe3548d04b6587b36b78cd46041927a41991860daee0bd9144a177c02c22a153cda7b6620df17f612f74f37000a13ddc_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault\" \"example\" {", "message": "Key vault should have purge protection enabled", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-693: Protection Mechanism Failure"], "impact": "MEDIUM", "likelihood": "MEDIUM", "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled", "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview#purge-protection"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.keyvault.keyvault-ensure-secret-expires", "end": {"col": 9, "line": 58, "offset": 1878}, "extra": {"engine_kind": "OSS", "fingerprint": "4e7da258b15fe2b29be57bbbe0081aa4f7bdc4aebbf1973f5afa5963a5a79dcfc099084e0ae9f428b7cc55dcdf8ca0e0448bbd7b5418a7a174061bb696561991_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_secret\" \"secret\" {", "message": "Ensure that the expiration date is set on all secrets", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-262: Not Using Password Aging"], "impact": "MEDIUM", "likelihood": "LOW", "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date", "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "INFO"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 58, "offset": 1870}}, {"check_id": "semgrep-rules.azure.security.keyvault.keyvault-ensure-key-expires", "end": {"col": 9, "line": 33, "offset": 1133}, "extra": {"engine_kind": "OSS", "fingerprint": "ef48b49f0ee4fbde74d3dcce327816f12fce6eda33e0dbbb6463337ecc16afa6587645ceeeef8fd5851d14aef8150602106d21e70d09c35655fa670e5ffbd9c6_0", "is_ignored": false, "lines": "resource \"azurerm_key_vault_key\" \"generated\" {", "message": "Ensure that the expiration date is set on all keys", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-262: Not Using Password Aging"], "impact": "MEDIUM", "likelihood": "LOW", "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date", "https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey?view=azps-5.8.0#example-1--modify-a-key-to-enable-it--and-set-the-expiration-date-and-tags"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "INFO"}, "path": "terraform/azure/key_vault.tf", "start": {"col": 1, "line": 33, "offset": 1125}}, {"check_id": "semgrep-rules.azure.security.storage.storage-allow-microsoft-service-bypass", "end": {"col": 2, "line": 69, "offset": 2400}, "extra": {"engine_kind": "OSS", "fingerprint": "9e6153ab81d377bda1f9681879c410749c94b7f497383973fdc3b00bb3f3d95737a31d7b39577e4dbda42ffcd389a4cf4dfa7db25c0466d943289ca1ec525076_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account_network_rules\" \"test\" {\n  resource_group_name  = azurerm_resource_group.example.name\n  storage_account_name = azurerm_storage_account.example.name\n\n  default_action = \"Deny\"\n  ip_rules       = [\"127.0.0.1\"]\n  bypass         = [\"Metrics\"]\n}", "message": "Some Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. To help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass", "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass", "https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {"$ANYTHING": {"abstract_content": "\"Metrics\"", "end": {"col": 30, "line": 68, "offset": 2397}, "start": {"col": 21, "line": 68, "offset": 2388}}}, "severity": "WARNING"}, "path": "terraform/azure/storage.tf", "start": {"col": 1, "line": 62, "offset": 2127}}, {"check_id": "semgrep-rules.azure.security.storage.storage-queue-services-logging", "end": {"col": 2, "line": 18, "offset": 875}, "extra": {"engine_kind": "OSS", "fingerprint": "2ecd01357f7917325f591ef826b9077076fa47dfda5268dc677871e324bc8bb8d61a81be5c70a87f781d6370ca62585125b5d93d55e7cfe45e68932901d191e3_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account\" \"security_storage_account\" {\n  name                      = \"securitystorageaccount-${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name       = azurerm_resource_group.example.name\n  location                  = azurerm_resource_group.example.location\n  account_tier              = \"Standard\"\n  account_replication_type  = \"LRS\"\n  enable_https_traffic_only = true\n  tags = {\n    git_commit           = \"a1d1c1ce31a1bde6dafa188846d90eca82abe5fd\"\n    git_file             = \"terraform/azure/mssql.tf\"\n    git_last_modified_at = \"2022-01-20 05:32:41\"\n    git_last_modified_by = \"28880387+tsmithv11@users.noreply.github.com\"\n    git_modifiers        = \"28880387+tsmithv11\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"4b504d4d-608c-45fe-ae56-807bde6d969f\"\n  }\n}", "message": "Storage Analytics logs detailed information about successful and failed requests to a storage service. This information can be used to monitor individual requests and to diagnose issues with a storage service. Requests are logged on a best-effort basis.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-778: Insufficient Logging"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A10:2017 - Insufficient Logging & Monitoring", "A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging", "https://docs.microsoft.com/en-us/azure/storage/common/storage-analytics-logging?tabs=dotnet"], "subcategory": ["audit"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.storage.storage-use-secure-tls-policy", "end": {"col": 2, "line": 18, "offset": 875}, "extra": {"engine_kind": "OSS", "fingerprint": "eae826175960a6e58a49f086536fe1973dfc6a5555b203ba07fa59844a6fe79a2d9db191cc6ce0a6f89653082d6bb2a8e7c5b18707138ed625c784b4b2390be5_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account\" \"security_storage_account\" {\n  name                      = \"securitystorageaccount-${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name       = azurerm_resource_group.example.name\n  location                  = azurerm_resource_group.example.location\n  account_tier              = \"Standard\"\n  account_replication_type  = \"LRS\"\n  enable_https_traffic_only = true\n  tags = {\n    git_commit           = \"a1d1c1ce31a1bde6dafa188846d90eca82abe5fd\"\n    git_file             = \"terraform/azure/mssql.tf\"\n    git_last_modified_at = \"2022-01-20 05:32:41\"\n    git_last_modified_by = \"28880387+tsmithv11@users.noreply.github.com\"\n    git_modifiers        = \"28880387+tsmithv11\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"4b504d4d-608c-45fe-ae56-807bde6d969f\"\n  }\n}", "message": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility. This check will warn if the minimum TLS is not set to TLS1_2.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version", "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "ERROR"}, "path": "terraform/azure/mssql.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.azure.security.storage.storage-use-secure-tls-policy", "end": {"col": 2, "line": 60, "offset": 2125}, "extra": {"engine_kind": "OSS", "fingerprint": "be91526052c3bfd23aae6b3135a65585ea012fb8102ce935285338035392b8ccd2c4d5d8b4e97fbfbcb621b324c8471c4ac7c7caf3fead7281b0c2d7434987b1_0", "is_ignored": false, "lines": "resource \"azurerm_storage_account\" \"example\" {\n  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"\n  resource_group_name      = azurerm_resource_group.example.name\n  location                 = azurerm_resource_group.example.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"GRS\"\n  queue_properties {\n    logging {\n      delete                = false\n      read                  = false\n      write                 = true\n      version               = \"1.0\"\n      retention_policy_days = 10\n    }\n    hour_metrics {\n      enabled               = true\n      include_apis          = true\n      version               = \"1.0\"\n      retention_policy_days = 10\n    }\n    minute_metrics {\n      enabled               = true\n      include_apis          = true\n      version               = \"1.0\"\n      retention_policy_days = 10\n    }\n  }\n  tags = {\n    git_commit           = \"5c6b5d60a8aa63a5d37e60f15185d13a967f0542\"\n    git_file             = \"terraform/azure/storage.tf\"\n    git_last_modified_at = \"2021-05-02 10:06:10\"\n    git_last_modified_by = \"nimrodkor@users.noreply.github.com\"\n    git_modifiers        = \"Adin.Ermie/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"23861ff4-c42d-495e-80ac-776c74035f43\"\n  }\n}", "message": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility. This check will warn if the minimum TLS is not set to TLS1_2.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version", "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version"], "subcategory": ["vuln"], "technology": ["terraform", "azure"]}, "metavars": {}, "severity": "ERROR"}, "path": "terraform/azure/storage.tf", "start": {"col": 1, "line": 23, "offset": 780}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 15, "offset": 566}, "extra": {"engine_kind": "OSS", "fingerprint": "f1e94a344c08aab9de61b65f5a3b4b6f77585f0d490f7d8adbc80fbc93c4bdbaa914e2fa2be127b643001c6aaf1e919f98abbfd1ea3a8a7cb9f7cc91fa7dbb35_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {\n  cluster_identifier      = \"app1-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 0\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"b6f2c2ec-0715-46a0-83d4-502e588826d1\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app1-rds-cluster", "end": {"col": 45, "line": 1, "offset": 44}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 31, "offset": 1134}, "extra": {"engine_kind": "OSS", "fingerprint": "47403751b0c39b859284dd94f0ee8fbd279d7bb8fbe1d7af2ca20884d0241ca5e0898448200726d2d6c21152a1a02f3bd536bcc12fc0a546e794cf31f456f9e2_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app2-rds-cluster\" {\n  cluster_identifier      = \"app2-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 1\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"d33c9292-952b-4c1f-9973-b6dbad519461\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app2-rds-cluster", "end": {"col": 45, "line": 17, "offset": 612}, "start": {"col": 29, "line": 17, "offset": 596}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 17, "offset": 568}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 47, "offset": 1703}, "extra": {"engine_kind": "OSS", "fingerprint": "5a829a8625f59ce669d7263dd0e1cb326eb1c040b346d6b9ab5f1fbd9a7e4a751cb5443bfc20bb31a0cdbe5fef5b2aa61970d2690f7940cccbed9be5c1df63e5_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app3-rds-cluster\" {\n  cluster_identifier      = \"app3-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 15\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"2a8584b1-7e9d-4739-8e37-366620c92027\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app3-rds-cluster", "end": {"col": 45, "line": 33, "offset": 1180}, "start": {"col": 29, "line": 33, "offset": 1164}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 33, "offset": 1136}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 63, "offset": 2272}, "extra": {"engine_kind": "OSS", "fingerprint": "578e9230bb02128c6efc9df2bd77dfa7a03f9569ba944e2a4e681338b20e863bb04ddb5e820eebb73ca48aaf697d702f8394fb1944ed420359c4cb1a1f955e86_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app4-rds-cluster\" {\n  cluster_identifier      = \"app4-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 15\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"284aaeed-fd3f-4b7a-b5f8-61a8457f4d83\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app4-rds-cluster", "end": {"col": 45, "line": 49, "offset": 1749}, "start": {"col": 29, "line": 49, "offset": 1733}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 49, "offset": 1705}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 79, "offset": 2841}, "extra": {"engine_kind": "OSS", "fingerprint": "299928f0c2298184cdf9b86bfc3a0b5d1e1bab7a8b829f03193ccbc859ec43249c93a5d32ff7e8a7344b2ebd424980d2265144871136dd6f5825a8c77e44c4e4_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app5-rds-cluster\" {\n  cluster_identifier      = \"app5-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 15\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"0b2bea23-5ca5-4bd1-956e-b9ed978daadf\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app5-rds-cluster", "end": {"col": 45, "line": 65, "offset": 2318}, "start": {"col": 29, "line": 65, "offset": 2302}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 65, "offset": 2274}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 95, "offset": 3410}, "extra": {"engine_kind": "OSS", "fingerprint": "a8cb833ee0834d811185be6d04eb2bd1123a5dcbae64c702d09d1d660de9c3c3517faf168683dbd5c9de67ba17b836fafbf2885bfd5ad36a968a87f68021b068_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app6-rds-cluster\" {\n  cluster_identifier      = \"app6-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 15\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"fcffb961-d859-4be5-997f-d51b50665ada\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app6-rds-cluster", "end": {"col": 45, "line": 81, "offset": 2887}, "start": {"col": 29, "line": 81, "offset": 2871}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 81, "offset": 2843}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 111, "offset": 3979}, "extra": {"engine_kind": "OSS", "fingerprint": "cc9bd7bc5b752af912feeb4449e532d2f4e8a45634c920d21c7cbd1961eb9208f8bf61afc9ce169d3fb67b76051572e5064814e38015a264c905fe15e4b8d100_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app7-rds-cluster\" {\n  cluster_identifier      = \"app7-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 25\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"ebc2ac20-23a3-4518-a7ef-3a102b003ab6\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app7-rds-cluster", "end": {"col": 45, "line": 97, "offset": 3456}, "start": {"col": 29, "line": 97, "offset": 3440}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 97, "offset": 3412}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 128, "offset": 4549}, "extra": {"engine_kind": "OSS", "fingerprint": "b1b87e6370b678e9bc36d1818a2f6ff5b9dd2b3e95bf96e76b5d22b5f083c088ae33f1fcbfd115af4abc35f382f137068232ef52a258e9e1b6f4ecb5fcf9fda1_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app8-rds-cluster\" {\n  cluster_identifier      = \"app8-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 25\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"af643747-0967-4251-8645-3b54882c2507\"\n\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app8-rds-cluster", "end": {"col": 45, "line": 113, "offset": 4025}, "start": {"col": 29, "line": 113, "offset": 4009}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 113, "offset": 3981}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-cluster-iam-authentication-not-enabled", "end": {"col": 2, "line": 144, "offset": 5118}, "extra": {"engine_kind": "OSS", "fingerprint": "c3ccfe32a3174a09c13b3a0e0354b8dbef6be84866d12d960bf108f54cbf234467cdb420db655d747d7ee7551fe2800e3ff382199dca54031a74bf0dfaf60cc5_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app9-rds-cluster\" {\n  cluster_identifier      = \"app9-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 25\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"a0c98536-c751-4743-92f1-a106ce750249\"\n  }\n}", "message": "The AWS RDS Cluster is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "app9-rds-cluster", "end": {"col": 45, "line": 130, "offset": 4595}, "start": {"col": 29, "line": 130, "offset": 4579}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 130, "offset": 4551}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-multiaz-not-enabled", "end": {"col": 2, "line": 42, "offset": 1518}, "extra": {"engine_kind": "OSS", "fingerprint": "a11bd204c69e7fd237f90ed94b0922d5e2b0e449ac11d00bdac72d5ff8bddf124f5e69a3b348f9936a0e257a6ee5e81fd35598b5c4b2d1ed3c52241c4e9f5ade_0", "is_ignored": false, "lines": "resource \"aws_db_instance\" \"default\" {\n\n  name                   = var.dbname\n  engine                 = \"mysql\"\n  option_group_name      = aws_db_option_group.default.name\n  parameter_group_name   = aws_db_parameter_group.default.name\n  db_subnet_group_name   = aws_db_subnet_group.default.name\n  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n\n  identifier              = \"rds-${local.resource_prefix.value}\"\n  engine_version          = \"8.0\" # Latest major version \n  instance_class          = \"db.t3.micro\"\n  allocated_storage       = \"20\"\n  username                = \"admin\"\n  password                = var.password\n  apply_immediately       = true\n  multi_az                = false\n  backup_retention_period = 0\n  storage_encrypted       = false\n  skip_final_snapshot     = true\n  monitoring_interval     = 0\n  publicly_accessible     = true\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-rds\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2023-04-27 12:47:51\"\n    git_last_modified_by = \"nadler@paloaltonetworks.com\"\n    git_modifiers        = \"nadler/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"47c13290-c2ce-48a7-b666-1b0085effb92\"\n  })\n\n  # Ignore password changes from tf plan diff\n  lifecycle {\n    ignore_changes = [\"password\"]\n  }\n}", "message": "The AWS RDS is not configured to use multi-az. Consider using it if possible.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "default", "end": {"col": 36, "line": 1, "offset": 35}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.best-practice.aws-rds-iam-authentication-not-enabled", "end": {"col": 2, "line": 42, "offset": 1518}, "extra": {"engine_kind": "OSS", "fingerprint": "62e9508463d3b3a71b54e722957ca492b0cc17299f2de1ab244afa36f250cbd234d9d7fe3016cd8f737e34f0df05972c318a0dafb24e695e11bdef04dc11e60e_0", "is_ignored": false, "lines": "resource \"aws_db_instance\" \"default\" {\n\n  name                   = var.dbname\n  engine                 = \"mysql\"\n  option_group_name      = aws_db_option_group.default.name\n  parameter_group_name   = aws_db_parameter_group.default.name\n  db_subnet_group_name   = aws_db_subnet_group.default.name\n  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n\n  identifier              = \"rds-${local.resource_prefix.value}\"\n  engine_version          = \"8.0\" # Latest major version \n  instance_class          = \"db.t3.micro\"\n  allocated_storage       = \"20\"\n  username                = \"admin\"\n  password                = var.password\n  apply_immediately       = true\n  multi_az                = false\n  backup_retention_period = 0\n  storage_encrypted       = false\n  skip_final_snapshot     = true\n  monitoring_interval     = 0\n  publicly_accessible     = true\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-rds\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2023-04-27 12:47:51\"\n    git_last_modified_by = \"nadler@paloaltonetworks.com\"\n    git_modifiers        = \"nadler/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"47c13290-c2ce-48a7-b666-1b0085effb92\"\n  })\n\n  # Ignore password changes from tf plan diff\n  lifecycle {\n    ignore_changes = [\"password\"]\n  }\n}", "message": "The AWS RDS is not configured to use IAM authentication. Consider using IAM for authentication.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "default", "end": {"col": 36, "line": 1, "offset": 35}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.best-practice.aws-s3-bucket-versioning-not-enabled", "end": {"col": 2, "line": 288, "offset": 9463}, "extra": {"engine_kind": "OSS", "fingerprint": "3886ea0c93ffae8a8f52147a419d881c4b8356697c15ebe29a65a081c1e53cd2c56d06c66f6775e4f77ebc376f530bc9a4f195131e4522b25fadcb9297ccb18c_0", "is_ignored": false, "lines": "resource \"aws_s3_bucket\" \"flowbucket\" {\n  bucket        = \"${local.resource_prefix.value}-flowlogs\"\n  force_destroy = true\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-flowlogs\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"f058838a-b1e0-4383-b965-7e06e987ffb1\"\n  })\n}", "message": "Ensure that Amazon S3 bucket versioning is not enabled. Consider using versioning if you don't have alternative backup mechanism.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "flowbucket", "end": {"col": 37, "line": 271, "offset": 8833}, "start": {"col": 27, "line": 271, "offset": 8823}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 271, "offset": 8797}}, {"check_id": "semgrep-rules.aws.best-practice.aws-s3-bucket-versioning-not-enabled", "end": {"col": 2, "line": 21, "offset": 800}, "extra": {"engine_kind": "OSS", "fingerprint": "99d3e675f489d39101c8aed0d80755df31a46f6f34211eb4358b0f616545e591c268ddfeaa77b10c5def5da53b94f29f90f92bdcb8dfb42e2e6bcca1d08b1367_0", "is_ignored": false, "lines": "resource \"aws_s3_bucket\" \"data\" {\n  # bucket is public\n  # bucket is not encrypted\n  # bucket does not have access logs\n  # bucket does not have versioning\n  bucket        = \"${local.resource_prefix.value}-data\"\n  force_destroy = true\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-data\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"4d57f83ca4d3a78a44fb36d1dcf0d23983fa44f5\"\n    git_file             = \"terraform/aws/s3.tf\"\n    git_last_modified_at = \"2022-05-18 07:08:06\"\n    git_last_modified_by = \"nimrod@bridgecrew.io\"\n    git_modifiers        = \"34870196+LironElbaz/nimrod/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"0874007d-903a-4b4c-945f-c9c233e13243\"\n  })\n}", "message": "Ensure that Amazon S3 bucket versioning is not enabled. Consider using versioning if you don't have alternative backup mechanism.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "data", "end": {"col": 31, "line": 1, "offset": 30}, "start": {"col": 27, "line": 1, "offset": 26}}}, "severity": "WARNING"}, "path": "terraform/aws/s3.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.best-practice.aws-s3-bucket-versioning-not-enabled", "end": {"col": 2, "line": 63, "offset": 2309}, "extra": {"engine_kind": "OSS", "fingerprint": "e0f61a9941026b82c216fba1e2d929bb0f8f967006bea5700c0e34075d3152d94465a3c0e5ba4cb344c94a28d482b831c865d9372c725392fc4a18a15a01e29e_0", "is_ignored": false, "lines": "resource \"aws_s3_bucket\" \"financials\" {\n  # bucket is not encrypted\n  # bucket does not have access logs\n  # bucket does not have versioning\n  bucket        = \"${local.resource_prefix.value}-financials\"\n  acl           = \"private\"\n  force_destroy = true\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-financials\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/s3.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"0e012640-b597-4e5d-9378-d4b584aea913\"\n  })\n\n}", "message": "Ensure that Amazon S3 bucket versioning is not enabled. Consider using versioning if you don't have alternative backup mechanism.", "metadata": {"category": "best-practice", "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "financials", "end": {"col": 37, "line": 42, "offset": 1547}, "start": {"col": 27, "line": 42, "offset": 1537}}}, "severity": "WARNING"}, "path": "terraform/aws/s3.tf", "start": {"col": 1, "line": 42, "offset": 1511}}, {"check_id": "semgrep-rules.aws.security.aws-ebs-volume-unencrypted", "end": {"col": 2, "line": 51, "offset": 1823}, "extra": {"engine_kind": "OSS", "fingerprint": "6b64a6130b66877ee52bf97c4b70b356efb1edacfcd7cf48a3d1f39c71032afcce5ab56133ee131c06f1ba48bbe97024d02a712c64c5a823ef3cdc253ea0a8d5_0", "is_ignored": false, "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  # unencrypted volume\n  availability_zone = \"${var.region}a\"\n  #encrypted         = false  # Setting this causes the volume to be recreated on apply \n  size = 1\n  tags = merge({\n    Name = \"${local.resource_prefix.value}-ebs\"\n    }, {\n    git_commit           = \"d3439f0f2af62f6fa3521e14d6c27819ef8f12e1\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2021-05-02 11:17:26\"\n    git_last_modified_by = \"nimrodkor@users.noreply.github.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"c5509daf-10f0-46af-9e03-41989212521d\"\n  })\n}", "message": "The AWS EBS volume is unencrypted. The volume, the disk I/O and any derived snapshots could be read if compromised. Volumes should be encrypted to ensure sensitive data is stored securely.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "HIGH", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web_host_storage", "end": {"col": 44, "line": 34, "offset": 1158}, "start": {"col": 28, "line": 34, "offset": 1142}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 34, "offset": 1115}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-rule-missing-description", "end": {"col": 2, "line": 134, "offset": 4648}, "extra": {"engine_kind": "OSS", "fingerprint": "48edba3fc91c0b2325204bc0bfe592df3c6cd4a470520f48d5e331c61220f4e4bfa89d53c3500acb440040094136f187c925c67d7d8e0dd4733dc1929d08c1f8_0", "is_ignored": false, "lines": "resource \"aws_security_group\" \"default\" {\n  name   = \"${local.resource_prefix.value}-rds-sg\"\n  vpc_id = aws_vpc.web_vpc.id\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-rds-sg\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"7b251090-8ac1-4290-bd2e-bf3e16126430\"\n  })\n}", "message": "The AWS security group rule is missing a description, or its description is empty or the default value.  Security groups rules should include a meaningful description in order to simplify auditing, debugging, and managing security groups.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-223: Omission of Security-relevant Information"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://shisho.dev/dojo/providers/aws/Amazon_EC2/aws-security-group/#:~:text=Ensure%20to%20keep%20the%20description%20of%20your%20security%20group%20up%2Dto%2Ddate", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description", "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "default", "end": {"col": 39, "line": 117, "offset": 4019}, "start": {"col": 32, "line": 117, "offset": 4012}}, "$SECGROUP": {"abstract_content": "aws_security_group", "end": {"col": 29, "line": 117, "offset": 4009}, "start": {"col": 11, "line": 117, "offset": 3991}}}, "severity": "INFO"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 117, "offset": 3981}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-rule-missing-description", "end": {"col": 2, "line": 143, "offset": 4924}, "extra": {"engine_kind": "OSS", "fingerprint": "81f899d78b05f87da83755d36bf934614315d97f77050088daa9d5630be11155dcfdb47f6ad171a31f03231fa1b1d90a751016ae773846c119afa78e8e2e3e42_0", "is_ignored": false, "lines": "resource \"aws_security_group_rule\" \"ingress\" {\n  type              = \"ingress\"\n  from_port         = \"3306\"\n  to_port           = \"3306\"\n  protocol          = \"tcp\"\n  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]\n  security_group_id = aws_security_group.default.id\n}", "message": "The AWS security group rule is missing a description, or its description is empty or the default value.  Security groups rules should include a meaningful description in order to simplify auditing, debugging, and managing security groups.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-223: Omission of Security-relevant Information"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://shisho.dev/dojo/providers/aws/Amazon_EC2/aws-security-group/#:~:text=Ensure%20to%20keep%20the%20description%20of%20your%20security%20group%20up%2Dto%2Ddate", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description", "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "ingress", "end": {"col": 44, "line": 136, "offset": 4693}, "start": {"col": 37, "line": 136, "offset": 4686}}, "$SECGROUP": {"abstract_content": "aws_security_group_rule", "end": {"col": 34, "line": 136, "offset": 4683}, "start": {"col": 11, "line": 136, "offset": 4660}}}, "severity": "INFO"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 136, "offset": 4650}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-rule-missing-description", "end": {"col": 2, "line": 152, "offset": 5172}, "extra": {"engine_kind": "OSS", "fingerprint": "1d7ace58372eeccb38ca76928a0687c0fefc3f2f1781e0d52d39544effd3d1e98c55d9576e4f5a8e8abc939b14a45b11cb368433963515acf5c1aefa1567457f_0", "is_ignored": false, "lines": "resource \"aws_security_group_rule\" \"egress\" {\n  type              = \"egress\"\n  from_port         = 0\n  to_port           = 0\n  protocol          = \"-1\"\n  cidr_blocks       = [\"0.0.0.0/0\"]\n  security_group_id = \"${aws_security_group.default.id}\"\n}", "message": "The AWS security group rule is missing a description, or its description is empty or the default value.  Security groups rules should include a meaningful description in order to simplify auditing, debugging, and managing security groups.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-223: Omission of Security-relevant Information"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://shisho.dev/dojo/providers/aws/Amazon_EC2/aws-security-group/#:~:text=Ensure%20to%20keep%20the%20description%20of%20your%20security%20group%20up%2Dto%2Ddate", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description", "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "egress", "end": {"col": 43, "line": 145, "offset": 4968}, "start": {"col": 37, "line": 145, "offset": 4962}}, "$SECGROUP": {"abstract_content": "aws_security_group_rule", "end": {"col": 34, "line": 145, "offset": 4959}, "start": {"col": 11, "line": 145, "offset": 4936}}}, "severity": "INFO"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 145, "offset": 4926}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-rule-missing-description", "end": {"col": 2, "line": 115, "offset": 3735}, "extra": {"engine_kind": "OSS", "fingerprint": "cc379dbadd8f3af3da7d776fa9a7c64ebf733512134cf5cad2db49ef88beb08fc1f2d53ed8828f06ef915c11e24be31f58c57f6fa5eea4691aa3814dd62ae82e_0", "is_ignored": false, "lines": "resource \"aws_security_group\" \"web-node\" {\n  # security group is open to the world in SSH port\n  name        = \"${local.resource_prefix.value}-sg\"\n  description = \"${local.resource_prefix.value} Security Group\"\n  vpc_id      = aws_vpc.web_vpc.id\n\n  ingress {\n    from_port = 80\n    to_port   = 80\n    protocol  = \"tcp\"\n    cidr_blocks = [\n    \"0.0.0.0/0\"]\n  }\n  ingress {\n    from_port = 22\n    to_port   = 22\n    protocol  = \"tcp\"\n    cidr_blocks = [\n    \"0.0.0.0/0\"]\n  }\n  egress {\n    from_port = 0\n    to_port   = 0\n    protocol  = \"-1\"\n    cidr_blocks = [\n    \"0.0.0.0/0\"]\n  }\n  depends_on = [aws_vpc.web_vpc]\n  tags = {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"b7af1b40-64eb-4519-a1a0-ab198db4b193\"\n  }\n}", "message": "The AWS security group rule is missing a description, or its description is empty or the default value.  Security groups rules should include a meaningful description in order to simplify auditing, debugging, and managing security groups.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-223: Omission of Security-relevant Information"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A09:2021 - Security Logging and Monitoring Failures"], "references": ["https://shisho.dev/dojo/providers/aws/Amazon_EC2/aws-security-group/#:~:text=Ensure%20to%20keep%20the%20description%20of%20your%20security%20group%20up%2Dto%2Ddate", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description", "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web-node", "end": {"col": 40, "line": 77, "offset": 2739}, "start": {"col": 32, "line": 77, "offset": 2731}}, "$INGRESS": {"abstract_content": "ingress", "end": {"col": 10, "line": 90, "offset": 3069}, "start": {"col": 3, "line": 90, "offset": 3062}}}, "severity": "INFO"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 77, "offset": 2700}}, {"check_id": "semgrep-rules.aws.security.aws-provider-static-credentials", "end": {"col": 57, "line": 11, "offset": 255}, "extra": {"engine_kind": "OSS", "fingerprint": "7e776c9de8a98be7a6bf14b435962a64eeaa5612441df230d3477a742cad75b1c26e86ee651a13b5d8b0599fedf07d0bf286fee2dc7fe2803b9f6c44179f37ba_0", "is_ignored": false, "lines": "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"", "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-798: Use of Hard-coded Credentials"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A07:2021 - Identification and Authentication Failures"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_CheatSheet.html"], "subcategory": ["vuln"], "technology": ["secrets", "aws", "terraform"]}, "metavars": {"$SECRET": {"abstract_content": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY", "end": {"col": 57, "line": 11, "offset": 255}, "start": {"col": 17, "line": 11, "offset": 215}}}, "severity": "WARNING"}, "path": "terraform/aws/providers.tf", "start": {"col": 17, "line": 11, "offset": 215}}, {"check_id": "semgrep-rules.aws.security.aws-rds-backup-no-retention", "end": {"col": 2, "line": 42, "offset": 1518}, "extra": {"engine_kind": "OSS", "fingerprint": "3e785092b6ecbfc3e3cdd54e179bdcae8f5ea98422085e04a2ab17e6aa5de8cbb99ebc8a5d85bcc8026a2d54c933ee7756b223e34b9d67a6df5b0d3b54513b5f_0", "is_ignored": false, "lines": "resource \"aws_db_instance\" \"default\" {\n\n  name                   = var.dbname\n  engine                 = \"mysql\"\n  option_group_name      = aws_db_option_group.default.name\n  parameter_group_name   = aws_db_parameter_group.default.name\n  db_subnet_group_name   = aws_db_subnet_group.default.name\n  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n\n  identifier              = \"rds-${local.resource_prefix.value}\"\n  engine_version          = \"8.0\" # Latest major version \n  instance_class          = \"db.t3.micro\"\n  allocated_storage       = \"20\"\n  username                = \"admin\"\n  password                = var.password\n  apply_immediately       = true\n  multi_az                = false\n  backup_retention_period = 0\n  storage_encrypted       = false\n  skip_final_snapshot     = true\n  monitoring_interval     = 0\n  publicly_accessible     = true\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-rds\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2023-04-27 12:47:51\"\n    git_last_modified_by = \"nadler@paloaltonetworks.com\"\n    git_modifiers        = \"nadler/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"47c13290-c2ce-48a7-b666-1b0085effb92\"\n  })\n\n  # Ignore password changes from tf plan diff\n  lifecycle {\n    ignore_changes = [\"password\"]\n  }\n}", "message": "The AWS RDS has no retention. Missing retention can cause losing important event information. To fix this, set a `backup_retention_period`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["vuln"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "default", "end": {"col": 36, "line": 1, "offset": 35}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.security.aws-rds-backup-no-retention", "end": {"col": 2, "line": 15, "offset": 566}, "extra": {"engine_kind": "OSS", "fingerprint": "746ee67f716fd91a66e76b9b9f3ef1acceffbbfa1ae831a4fec67640b2f2b1decf5c12fa309eef15158245386737beaa6462d2bed0bc0747e3dc2c29c365f56a_0", "is_ignored": false, "lines": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {\n  cluster_identifier      = \"app1-rds-cluster\"\n  allocated_storage       = 10\n  backup_retention_period = 0\n  tags = {\n    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"\n    git_file             = \"terraform/aws/rds.tf\"\n    git_last_modified_at = \"2021-12-08 23:26:32\"\n    git_last_modified_by = \"tron47@gmail.com\"\n    git_modifiers        = \"tron47\"\n    git_org              = \"matansha\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"b6f2c2ec-0715-46a0-83d4-502e588826d1\"\n  }\n}", "message": "The AWS RDS has no retention. Missing retention can cause losing important event information. To fix this, set a `backup_retention_period`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["vuln"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "app1-rds-cluster", "end": {"col": 45, "line": 1, "offset": 44}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/rds.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.security.aws-kms-no-rotation", "end": {"col": 2, "line": 16, "offset": 591}, "extra": {"engine_kind": "OSS", "fingerprint": "d0df9ec749e747b3717eadaf6d11f6361bd524f628e84531e9c391ad0388ae27b3ad191b53973bf443f39709192b5807591ab1de9ddad156069df1c37282bbc2_0", "is_ignored": false, "lines": "resource \"aws_kms_key\" \"logs_key\" {\n  # key does not have rotation enabled\n  description = \"${local.resource_prefix.value}-logs bucket key\"\n\n  deletion_window_in_days = 7\n  tags = {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/kms.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"cd8fa2a7-4868-4cd1-993d-da4644808ce5\"\n  }\n}", "message": "The AWS KMS has no rotation. Missing rotation can cause leaked key to be used by attackers. To fix this, set a `enable_key_rotation`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-326: Inadequate Encryption Strength"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["vuln"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "logs_key", "end": {"col": 33, "line": 1, "offset": 32}, "start": {"col": 25, "line": 1, "offset": 24}}}, "severity": "WARNING"}, "path": "terraform/aws/kms.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.security.aws-s3-bucket-object-encrypted-with-cmk", "end": {"col": 2, "line": 40, "offset": 1509}, "extra": {"engine_kind": "OSS", "fingerprint": "833217ee92c949940f5cae8ed386c082a40b51edb6554fbe0647bf36374de597f0d9f96d046a3fad848fb8b909bdb7d1eaa47b489156d0384e64f0dce5954144_0", "is_ignored": false, "lines": "resource \"aws_s3_bucket_object\" \"data_object\" {\n  bucket = aws_s3_bucket.data.id\n  key    = \"customer-master.xlsx\"\n  source = \"resources/customer-master.xlsx\"\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-customer-master\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/s3.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"a7f01cc7-63c2-41a8-8555-6665e5e39a64\"\n  })\n}", "message": "Ensure S3 bucket object is encrypted at rest using KMS CMKs. CMKs gives you control over the encryption key in terms of access and rotation.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "data_object", "end": {"col": 45, "line": 23, "offset": 846}, "start": {"col": 34, "line": 23, "offset": 835}}}, "severity": "WARNING"}, "path": "terraform/aws/s3.tf", "start": {"col": 1, "line": 23, "offset": 802}}, {"check_id": "semgrep-rules.aws.security.aws-subnet-has-public-ip-address", "end": {"col": 2, "line": 153, "offset": 5050}, "extra": {"engine_kind": "OSS", "fingerprint": "6e98bcb98fdee8e844513e6e285f088f5083b5b866bf079f70c61ea5c556f55b0d9211aa4fa360cdd89f8866cad273a23c14d0f7e93ae6a249f7379a67a2a89f_0", "is_ignored": false, "lines": "resource \"aws_subnet\" \"web_subnet\" {\n  vpc_id                  = aws_vpc.web_vpc.id\n  cidr_block              = \"172.16.10.0/24\"\n  availability_zone       = \"${var.region}a\"\n  map_public_ip_on_launch = true\n\n  tags = merge({\n    Name = \"${local.resource_prefix.value}-subnet\"\n    }, {\n    git_commit           = \"6e62522d2ab8f63740e53752b84a6e99cd65696a\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2021-05-02 11:16:31\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"0345f650-d280-4ca8-86c9-c71c38c0eda8\"\n  })\n}", "message": "Resources in the AWS subnet are assigned a public IP address. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application. Set `map_public_ip_on_launch` to false so that resources are not publicly-accessible.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web_subnet", "end": {"col": 34, "line": 135, "offset": 4388}, "start": {"col": 24, "line": 135, "offset": 4378}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 135, "offset": 4355}}, {"check_id": "semgrep-rules.aws.security.aws-subnet-has-public-ip-address", "end": {"col": 2, "line": 173, "offset": 5749}, "extra": {"engine_kind": "OSS", "fingerprint": "26213e3ce698c930b541b1325c287b62e8f24341a5d289d8d7fea2356b3e44336f5bced4876146f0037ef01ab75997b7595dbed41c8342c0eaf7680f72eb7136_0", "is_ignored": false, "lines": "resource \"aws_subnet\" \"web_subnet2\" {\n  vpc_id                  = aws_vpc.web_vpc.id\n  cidr_block              = \"172.16.11.0/24\"\n  availability_zone       = \"${var.region}b\"\n  map_public_ip_on_launch = true\n\n  tags = merge({\n    Name = \"${local.resource_prefix.value}-subnet2\"\n    }, {\n    git_commit           = \"6e62522d2ab8f63740e53752b84a6e99cd65696a\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2021-05-02 11:16:31\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"224af03a-00e0-4981-be30-14965833c2db\"\n  })\n}", "message": "Resources in the AWS subnet are assigned a public IP address. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application. Set `map_public_ip_on_launch` to false so that resources are not publicly-accessible.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web_subnet2", "end": {"col": 35, "line": 155, "offset": 5086}, "start": {"col": 24, "line": 155, "offset": 5075}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 155, "offset": 5052}}, {"check_id": "semgrep-rules.aws.security.aws-lambda-x-ray-tracing-not-active", "end": {"col": 2, "line": 59, "offset": 1802}, "extra": {"engine_kind": "OSS", "fingerprint": "e151ca88e3b36cf1341e8fe043ef4576260e2ccab864ff7ec0d3abf243996a1b69b1fead6e1d1f2791b6e4cb297cfe15d4293bd3ce5777328930833c4b2c8590_0", "is_ignored": false, "lines": "resource \"aws_lambda_function\" \"analysis_lambda\" {\n  # lambda have plain text secrets in environment variables\n  filename      = \"resources/lambda_function_payload.zip\"\n  function_name = \"${local.resource_prefix.value}-analysis\"\n  role          = \"${aws_iam_role.iam_for_lambda.arn}\"\n  handler       = \"exports.test\"\n\n  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"\n\n  runtime = \"nodejs12.x\"\n\n  environment {\n    variables = {\n      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n    }\n  }\n  tags = {\n    git_commit           = \"5c6b5d60a8aa63a5d37e60f15185d13a967f0542\"\n    git_file             = \"terraform/aws/lambda.tf\"\n    git_last_modified_at = \"2021-05-02 10:06:10\"\n    git_last_modified_by = \"nimrodkor@users.noreply.github.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"f7d8bc47-e5d9-4b09-9d8f-e7b9724d826e\"\n  }\n}", "message": "The AWS Lambda function does not have active X-Ray tracing enabled. X-Ray tracing enables end-to-end debugging and analysis of all function activity. This makes it easier to trace the flow of logs and identify bottlenecks, slow downs and timeouts.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-778: Insufficient Logging"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A09:2021 Security Logging and Monitoring Failures"], "references": ["https://cwe.mitre.org/data/definitions/778.html", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode", "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"], "subcategory": ["audit"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "analysis_lambda", "end": {"col": 48, "line": 32, "offset": 834}, "start": {"col": 33, "line": 32, "offset": 819}}}, "severity": "INFO"}, "path": "terraform/aws/lambda.tf", "start": {"col": 1, "line": 32, "offset": 787}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-allows-public-ingress", "end": {"col": 4, "line": 89, "offset": 3059}, "extra": {"engine_kind": "OSS", "fingerprint": "180ad6b6071d384a6cad7c2dc233dd38d1c75e67a7940c8b55f3316096b8e74dc78a20a7ceb69b2ee50ac65ed826f8cf6ce7fe8ce49bb9a016163ccb51ab20a6_0", "is_ignored": false, "lines": "  ingress {\n    from_port = 80\n    to_port   = 80\n    protocol  = \"tcp\"\n    cidr_blocks = [\n    \"0.0.0.0/0\"]\n  }", "message": "The security group rule allows ingress from public internet. Opening up ports to the public internet is potentially dangerous. You should restrict access to IP addresses or ranges that explicitly require it where possible. Set a more restrictive CIDR range.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_security_group_ingress_rule#cidr_ipv4", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web-node", "end": {"col": 40, "line": 77, "offset": 2739}, "start": {"col": 32, "line": 77, "offset": 2731}}, "$PUBLIC_IPV4_CIDR": {"abstract_content": "0.0.0.0/0", "end": {"col": 15, "line": 88, "offset": 3053}, "start": {"col": 6, "line": 88, "offset": 3044}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 3, "line": 83, "offset": 2949}}, {"check_id": "semgrep-rules.aws.security.aws-ec2-security-group-allows-public-ingress", "end": {"col": 4, "line": 96, "offset": 3172}, "extra": {"engine_kind": "OSS", "fingerprint": "180ad6b6071d384a6cad7c2dc233dd38d1c75e67a7940c8b55f3316096b8e74dc78a20a7ceb69b2ee50ac65ed826f8cf6ce7fe8ce49bb9a016163ccb51ab20a6_1", "is_ignored": false, "lines": "  ingress {\n    from_port = 22\n    to_port   = 22\n    protocol  = \"tcp\"\n    cidr_blocks = [\n    \"0.0.0.0/0\"]\n  }", "message": "The security group rule allows ingress from public internet. Opening up ports to the public internet is potentially dangerous. You should restrict access to IP addresses or ranges that explicitly require it where possible. Set a more restrictive CIDR range.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_security_group_ingress_rule#cidr_ipv4", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ANYTHING": {"abstract_content": "web-node", "end": {"col": 40, "line": 77, "offset": 2739}, "start": {"col": 32, "line": 77, "offset": 2731}}, "$PUBLIC_IPV4_CIDR": {"abstract_content": "0.0.0.0/0", "end": {"col": 15, "line": 95, "offset": 3166}, "start": {"col": 6, "line": 95, "offset": 3157}}}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 3, "line": 90, "offset": 3062}}, {"check_id": "semgrep-rules.aws.security.aws-db-instance-no-logging", "end": {"col": 2, "line": 42, "offset": 1518}, "extra": {"engine_kind": "OSS", "fingerprint": "aabc23fdfacb3f79c881eefb04b7dab6cd9753b35bdc127f029adbaef6b851d7059d3ef4c7f33e528fd8247424a2c33d34ddee02c78052afb4f206d83ff2b533_0", "is_ignored": false, "lines": "resource \"aws_db_instance\" \"default\" {\n\n  name                   = var.dbname\n  engine                 = \"mysql\"\n  option_group_name      = aws_db_option_group.default.name\n  parameter_group_name   = aws_db_parameter_group.default.name\n  db_subnet_group_name   = aws_db_subnet_group.default.name\n  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]\n\n  identifier              = \"rds-${local.resource_prefix.value}\"\n  engine_version          = \"8.0\" # Latest major version \n  instance_class          = \"db.t3.micro\"\n  allocated_storage       = \"20\"\n  username                = \"admin\"\n  password                = var.password\n  apply_immediately       = true\n  multi_az                = false\n  backup_retention_period = 0\n  storage_encrypted       = false\n  skip_final_snapshot     = true\n  monitoring_interval     = 0\n  publicly_accessible     = true\n\n  tags = merge({\n    Name        = \"${local.resource_prefix.value}-rds\"\n    Environment = local.resource_prefix.value\n    }, {\n    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2023-04-27 12:47:51\"\n    git_last_modified_by = \"nadler@paloaltonetworks.com\"\n    git_modifiers        = \"nadler/nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"47c13290-c2ce-48a7-b666-1b0085effb92\"\n  })\n\n  # Ignore password changes from tf plan diff\n  lifecycle {\n    ignore_changes = [\"password\"]\n  }\n}", "message": "Database instance has no logging. Missing logs can cause missing important event information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "LOW", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "subcategory": ["vuln"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "default", "end": {"col": 36, "line": 1, "offset": 35}, "start": {"col": 29, "line": 1, "offset": 28}}}, "severity": "WARNING"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.aws.security.aws-lambda-environment-unencrypted", "end": {"col": 4, "line": 48, "offset": 1363}, "extra": {"engine_kind": "OSS", "fingerprint": "168e95f962da60702ba2dfb388316dda053525e5979786f2f0a04a36823d9c7aadca2a7bdcb43e35c49faa5b98631aab82575603621e82263a5fed8065096add_0", "is_ignored": false, "lines": "  environment {\n    variables = {\n      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n    }\n  }", "message": "By default, the AWS Lambda Environment is encrypted using AWS-managed keys. However, for added security, it's recommended to configure your own AWS KMS encryption key to protect your environment variables in Lambda. You can either create a new aws_kms_key resource or use the ARN of an existing key in your AWS account to do so.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-320: CWE CATEGORY: Key Management Errors"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "subcategory": ["audit"], "technology": ["aws", "terraform"]}, "metavars": {"$ANYTHING": {"abstract_content": "analysis_lambda", "end": {"col": 48, "line": 32, "offset": 834}, "start": {"col": 33, "line": 32, "offset": 819}}}, "severity": "WARNING"}, "path": "terraform/aws/lambda.tf", "start": {"col": 3, "line": 43, "offset": 1218}}, {"check_id": "semgrep-rules.lang.security.ec2-imdsv1-optional", "end": {"col": 2, "line": 413, "offset": 11952}, "extra": {"engine_kind": "OSS", "fingerprint": "f3e4ae62ffcc533eafa54077cd57bb5ce86b2364bc204e3e16b5feba8d4c20f307f43d823daa4aa22215f89718b18001014761d325832987b7229b10e1bf7f7b_0", "is_ignored": false, "lines": "resource \"aws_instance\" \"db_app\" {\n  # ec2 have plain text secrets in user data\n  ami                  = data.aws_ami.amazon-linux-2.id\n  instance_type        = \"t2.nano\"\n  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\n### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\nsudo yum -y update\nsudo yum -y install httpd php php-mysqlnd\nsudo systemctl enable httpd \nsudo systemctl start httpd\n\nsudo mkdir /var/www/inc\ncat << EnD > /tmp/dbinfo.inc\n<?php\ndefine('DB_SERVER', '${aws_db_instance.default.endpoint}');\ndefine('DB_USERNAME', '${aws_db_instance.default.username}');\ndefine('DB_PASSWORD', '${var.password}');\ndefine('DB_DATABASE', '${aws_db_instance.default.name}');\n?>\nEnD\nsudo mv /tmp/dbinfo.inc /var/www/inc \nsudo chown root:root /var/www/inc/dbinfo.inc\n\ncat << EnD > /tmp/index.php\n<?php include \"../inc/dbinfo.inc\"; ?>\n<html>\n<body>\n<h1>Sample page</h1>\n<?php\n\n  /* Connect to MySQL and select the database. */\n  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n\n  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n\n  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n\n  /* Ensure that the EMPLOYEES table exists. */\n  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n\n  /* If input fields are populated, add a row to the EMPLOYEES table. */\n  \\$employee_name = htmlentities(\\$_POST['NAME']);\n  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n\n  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n  }\n?>\n\n<!-- Input form -->\n<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n  <table border=\"0\">\n    <tr>\n      <td>NAME</td>\n      <td>ADDRESS</td>\n    </tr>\n    <tr>\n      <td>\n        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n      </td>\n      <td>\n        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n      </td>\n      <td>\n        <input type=\"submit\" value=\"Add Data\" />\n      </td>\n    </tr>\n  </table>\n</form>\n\n<!-- Display table data. -->\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n  <tr>\n    <td>ID</td>\n    <td>NAME</td>\n    <td>ADDRESS</td>\n  </tr>\n\n<?php\n\n\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n\nwhile(\\$query_data = mysqli_fetch_row(\\$result)) {\n  echo \"<tr>\";\n  echo \"<td>\",\\$query_data[0], \"</td>\",\n       \"<td>\",\\$query_data[1], \"</td>\",\n       \"<td>\",\\$query_data[2], \"</td>\";\n  echo \"</tr>\";\n}\n?>\n\n</table>\n\n<!-- Clean up. -->\n<?php\n\n  mysqli_free_result(\\$result);\n  mysqli_close(\\$connection);\n\n?>\n\n</body>\n</html>\n\n\n<?php\n\n/* Add an employee to the table. */\nfunction AddEmployee(\\$connection, \\$name, \\$address) {\n   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n\n   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n\n   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n}\n\n/* Check whether the table exists and, if not, create it. */\nfunction VerifyEmployeesTable(\\$connection, \\$dbName) {\n  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n  {\n     \\$query = \"CREATE TABLE EMPLOYEES (\n         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n         NAME VARCHAR(45),\n         ADDRESS VARCHAR(90)\n       )\";\n\n     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n  }\n}\n\n/* Check for the existence of a table. */\nfunction TableExists(\\$tableName, \\$connection, \\$dbName) {\n  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n\n  \\$checktable = mysqli_query(\\$connection,\n      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n\n  if(mysqli_num_rows(\\$checktable) > 0) return true;\n\n  return false;\n}\n?>               \nEnD\n\nsudo mv /tmp/index.php /var/www/html\nsudo chown root:root /var/www/html/index.php\n\n\n\nEOF\n  tags = merge({\n    Name = \"${local.resource_prefix.value}-dbapp\"\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/db-app.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"f7999d4e-c983-43ee-bd88-7903a6f8483e\"\n  })\n}", "message": "AWS EC2 Instance allowing use of the IMDSv1", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"], "subcategory": ["vuln"], "technology": ["terraform", "aws"]}, "metavars": {"$NAME": {"abstract_content": "db_app", "end": {"col": 32, "line": 243, "offset": 7294}, "start": {"col": 26, "line": 243, "offset": 7288}}}, "severity": "ERROR"}, "path": "terraform/aws/db-app.tf", "start": {"col": 1, "line": 243, "offset": 7263}}, {"check_id": "semgrep-rules.lang.security.ec2-imdsv1-optional", "end": {"col": 2, "line": 32, "offset": 1113}, "extra": {"engine_kind": "OSS", "fingerprint": "22b82a388baf051518a6332abac92d7535dc74d342afa50f20e9313419193da3b4bc88f3b858aea247162a13b7914371fe7c1291813fc123c1b00df08b385c25_0", "is_ignored": false, "lines": "resource \"aws_instance\" \"web_host\" {\n  # ec2 have plain text secrets in user data\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n  tags = merge({\n    Name = \"${local.resource_prefix.value}-ec2\"\n    }, {\n    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"\n    git_file             = \"terraform/aws/ec2.tf\"\n    git_last_modified_at = \"2020-06-16 14:46:24\"\n    git_last_modified_by = \"nimrodkor@gmail.com\"\n    git_modifiers        = \"nimrodkor\"\n    git_org              = \"bridgecrewio\"\n    git_repo             = \"terragoat\"\n    yor_trace            = \"347af3cd-4f70-4632-aca3-4d5e30ffc0b6\"\n  })\n}", "message": "AWS EC2 Instance allowing use of the IMDSv1", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"], "subcategory": ["vuln"], "technology": ["terraform", "aws"]}, "metavars": {"$NAME": {"abstract_content": "web_host", "end": {"col": 34, "line": 1, "offset": 33}, "start": {"col": 26, "line": 1, "offset": 25}}}, "severity": "ERROR"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.lang.security.unencrypted-ebs-volume", "end": {"col": 9, "line": 34, "offset": 1123}, "extra": {"engine_kind": "OSS", "fingerprint": "0bb4f6e9281125d336fcf874201e563f82a1f173d35201a92260ae1a7990841cf5c1f2f35fb15d055a4e927e3f698556479eb305414c4049aec332208e6beaba_0", "is_ignored": false, "lines": "resource \"aws_ebs_volume\" \"web_host_storage\" {", "message": "An EBS volume is configured without encryption enabled.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "subcategory": ["vuln"], "technology": ["terraform", "aws"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/aws/ec2.tf", "start": {"col": 1, "line": 34, "offset": 1115}}, {"check_id": "semgrep-rules.lang.security.rds-public-access", "end": {"col": 33, "line": 22, "offset": 862}, "extra": {"engine_kind": "OSS", "fingerprint": "97c0666e0629d53f0e957b0f5804355e57f814248008ec9b2aa87bd369441c5dc6eb3265ea85d43af51896df10847f5d418fc24aea1f9378ef7f831f508902cd_0", "is_ignored": false, "lines": "  publicly_accessible     = true", "message": "RDS instance accessible from the Internet detected.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-284: Improper Access Control"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#publicly_accessible", "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Hiding"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/aws/db-app.tf", "start": {"col": 3, "line": 22, "offset": 832}}, {"check_id": "semgrep-rules.lang.security.s3-public-rw-bucket", "end": {"col": 31, "line": 7, "offset": 287}, "extra": {"engine_kind": "OSS", "fingerprint": "c3ba61e708529aa7192da5e0affe2d2f7ff54e3a6c77c7a9129c9ae553697eada0c083d3cee5ddc6c9eb8ffb3fadd24a8898cc374eab9dd01affc58e23e3101a_0", "is_ignored": false, "lines": "  acl    = \"public-read-write\"", "message": "S3 bucket with public read-write access detected.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"], "cwe2021-top25": true, "impact": "MEDIUM", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#acl", "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl"], "subcategory": ["vuln"], "technology": ["terraform", "aws"]}, "metavars": {}, "severity": "ERROR"}, "path": "terraform/alicloud/bucket.tf", "start": {"col": 3, "line": 7, "offset": 259}}, {"check_id": "semgrep-rules.lang.security.elastic-search-encryption-at-rest", "end": {"col": 9, "line": 1, "offset": 8}, "extra": {"engine_kind": "OSS", "fingerprint": "0d59c0d75fd24152d6dc4724a4f147def76f8d043a4beb063d89ade98710725e59388861f4f8ab10368f6d6c4980cd020f4c3732cff18d3b6be1aaa360b53efa_0", "is_ignored": false, "lines": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {", "message": "Encryption at rest is not enabled for the elastic search domain resource", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-311: Missing Encryption of Sensitive Data"], "impact": "LOW", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {}, "severity": "WARNING"}, "path": "terraform/aws/es.tf", "start": {"col": 1, "line": 1, "offset": 0}}, {"check_id": "semgrep-rules.lang.security.iam.no-iam-creds-exposure", "end": {"col": 33, "line": 10, "offset": 196}, "extra": {"engine_kind": "OSS", "fingerprint": "b77ce05b18ead5ce40c501929363bdd2a6820eef72ccd9a17164bddb9811a79c9efe56de9649d130270d30e12ca1d0c90beb283368b75dfdb353e3c1039b6ce5_0", "is_ignored": false, "lines": "    actions = [\"sts:AssumeRole\"]", "message": "Ensure IAM policies don't allow credentials exposure. Credentials exposure actions return credentials as part of the API response, and can possibly lead to leaking important credentials. Instead, use another action that doesn't return sensitive data as part of the API response.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"], "cwe2021-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://cloudsplaining.readthedocs.io/en/latest/glossary/credentials-exposure/", "https://github.com/bridgecrewio/checkov/blob/ca830e14745c2c8e1b941985f305abe985d7f1f9/checkov/terraform/checks/data/aws/IAMCredentialsExposure.py"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ACTION": {"abstract_content": "\"sts:AssumeRole\"", "end": {"col": 32, "line": 10, "offset": 195}, "start": {"col": 16, "line": 10, "offset": 179}}}, "severity": "WARNING"}, "path": "terraform/aws/eks.tf", "start": {"col": 5, "line": 10, "offset": 168}}, {"check_id": "semgrep-rules.lang.security.iam.no-iam-resource-exposure", "end": {"col": 23, "line": 32, "offset": 963}, "extra": {"engine_kind": "OSS", "fingerprint": "9a63d3e0e81211c67325497fcb8a619527b4c5631be12096ec428c76f2aac00fa40bd9862767b603c6527800b9f69d22a2e1425a660aea46606a7a0d5d728677_0", "is_ignored": false, "lines": "    actions = [\"es:*\"]", "message": "Ensure IAM policies don't allow resource exposure. These actions can expose AWS resources to the public. For example `ecr:SetRepositoryPolicy` could let an attacker retrieve container images. Instead, use another action that doesn't expose AWS resources.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"], "cwe2021-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://cloudsplaining.readthedocs.io/en/latest/glossary/resource-exposure/", "https://github.com/bridgecrewio/checkov/blob/ca830e14745c2c8e1b941985f305abe985d7f1f9/checkov/terraform/checks/data/aws/IAMPermissionsManagement.py"], "subcategory": ["audit"], "technology": ["terraform", "aws"]}, "metavars": {"$ACTION": {"abstract_content": "\"es:*\"", "end": {"col": 22, "line": 32, "offset": 962}, "start": {"col": 16, "line": 32, "offset": 956}}}, "severity": "WARNING"}, "path": "terraform/aws/es.tf", "start": {"col": 5, "line": 32, "offset": 945}}], "version": "1.32.0"}